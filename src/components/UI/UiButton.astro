---
export interface Props {
  text?: string;
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'small' | 'medium' | 'large';
  width?: string;
  height?: string;
  disabled?: boolean;
  href?: string;
  target?: string;
  iconSrc?: string;
  iconPosition?: 'left' | 'right';
  class?: string;
}

const {
  text = '버튼',
  variant = 'primary',
  size = 'medium',
  width,
  height = '56px',
  disabled = false,
  href,
  target,
  iconSrc = '/assets/images/icon/icon-arr-right.svg',
  iconPosition = 'right',
  class: className = '',
} = Astro.props;

const Tag = href ? 'a' : 'button';
const linkProps = href ? { href, target } : {};
const buttonProps = href ? {} : { type: 'button', disabled };
---

<Tag
  class={`ui-button ui-button--${variant} ui-button--${size} ${className}`}
  style={width || height
    ? `${width ? `width: ${width};` : ''} ${height ? `height: ${height};` : ''}`
    : undefined}
  {...linkProps}
  {...buttonProps}
>
  {
    iconPosition === 'left' && iconSrc && (
      <div class="ui-button__icon ui-button__icon--left">
        <img src={iconSrc} alt="" />
      </div>
    )
  }

  <span class="ui-button__text">{text}</span>

  {
    iconPosition === 'right' && iconSrc && (
      <div class="ui-button__icon ui-button__icon--right">
        <img src={iconSrc} alt="" />
      </div>
    )
  }
</Tag>

<style lang="scss">
  .ui-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    border: none;
    border-radius: 8px;
    font-family: 'Pretendard GOV', sans-serif;
    font-weight: 400;
    line-height: 1.5;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.2s ease;
    box-sizing: border-box;

    &:focus {
      outline: 2px solid #3c79c2;
      outline-offset: 2px;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    // 사이즈 variants
    &--small {
      padding: 8px 16px;
      font-size: 14px;
      height: 32px;
    }

    &--medium {
      padding: 12px 20px;
      font-size: 16px;
      height: 48px;
    }

    &--large {
      padding: 16px 24px;
      font-size: 19px;
      height: 56px;
    }

    // 색상 variants
    &--primary {
      background: #244874;
      color: #ffffff;

      &:hover:not(:disabled) {
        background: #1e3a5f;
      }

      &:active:not(:disabled) {
        background: #162d47;
      }
    }

    &--secondary {
      background: #ffffff;
      color: #244874;
      border: 1px solid #244874;

      &:hover:not(:disabled) {
        background: #f8f9fa;
      }

      &:active:not(:disabled) {
        background: #e9ecef;
      }
    }

    &--ghost {
      background: transparent;
      color: #244874;

      &:hover:not(:disabled) {
        background: rgba(36, 72, 116, 0.1);
      }

      &:active:not(:disabled) {
        background: rgba(36, 72, 116, 0.2);
      }
    }

    // 텍스트
    &__text {
      flex: 1;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    // 아이콘
    &__icon {
      flex-shrink: 0;
      display: flex;
      align-items: center;
      justify-content: center;

      img {
        display: block;
        width: 100%;
        height: 100%;
      }

      &--left {
        order: -1;
      }

      &--right {
        order: 1;
      }
    }

    // 사이즈별 아이콘 크기
    &--small &__icon {
      width: 16px;
      height: 16px;
    }

    &--medium &__icon {
      width: 20px;
      height: 20px;
    }

    &--large &__icon {
      width: 24px;
      height: 24px;
    }

    // 링크 스타일링
    &[href] {
      display: inline-flex;
    }
  }
</style>
