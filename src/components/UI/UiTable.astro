---
export interface TableColumn {
  key: string;
  label: string;
  width?: string;
  align?: 'left' | 'center' | 'right';
  headerAlign?: 'left' | 'center' | 'right';
  sortable?: boolean;
  type?: 'text' | 'button' | 'buttons' | 'badge'; // 컬럼 타입 추가
}

export interface TableButton {
  text: string;
  variant?: string; // 버튼 스타일 변형
  onClick?: () => void;
}

export interface TableRow {
  [key: string]: any;
  // 각 셀의 값은 string, TableButton, 또는 TableButton[] 가능
}

export interface Props {
  /**
   * 테이블 컬럼 정의
   */
  columns: TableColumn[];
  /**
   * 테이블 데이터
   */
  rows: TableRow[];
  /**
   * 테이블 ID
   */
  id?: string;
  /**
   * 추가 CSS 클래스
   */
  class?: string;
  /**
   * 테이블 캐션 (접근성)
   */
  caption?: string;
  /**
   * 체크박스 컬럼 표시 여부
   */
  showCheckbox?: boolean;
  /**
   * 번호 컬럼 표시 여부
   */
  showIndex?: boolean;
  /**
   * 상태 컬럼 표시 여부
   */
  showStatus?: boolean;
  /**
   * 테이블 최대 높이 (px 또는 rem)
   */
  maxHeight?: string;
  /**
   * 헤더 고정 여부
   */
  stickyHeader?: boolean;
}

const {
  columns,
  rows,
  id,
  class: className = '',
  caption,
  showCheckbox = false,
  showIndex = true,
  showStatus = false,
  maxHeight,
  stickyHeader = false,
  ...rest
} = Astro.props;

const tableId = id || `table-${Math.random().toString(36).substr(2, 9)}`;
const wrapperStyles = maxHeight ? { maxHeight, overflowY: 'auto' } : {};
---

<div
  class={`ui-table-wrapper ${stickyHeader ? 'ui-table-wrapper--sticky' : ''} ${className}`}
  style={wrapperStyles}
  {...rest}
>
  <table class="ui-table" id={tableId}>
    {caption && <caption class="ui-table__caption">{caption}</caption>}

    <thead class="ui-table__head">
      <tr class="ui-table__row ui-table__row--head">
        {
          showCheckbox && (
            <th class="ui-table__cell ui-table__cell--head ui-table__cell--checkbox">
              <input
                type="checkbox"
                class="ui-table__checkbox"
                aria-label="전체 선택"
              />
            </th>
          )
        }

        {
          showIndex && (
            <th class="ui-table__cell ui-table__cell--head ui-table__cell--index">
              번호
            </th>
          )
        }

        {
          columns.map(column => (
            <th
              class={`ui-table__cell ui-table__cell--head ${column.sortable ? 'ui-table__cell--sortable' : ''}`}
              style={column.width ? `width: ${column.width}` : undefined}
            >
              <div
                class={`ui-table__cell-content ui-table__cell-content--${column.headerAlign || column.align || 'left'}`}
              >
                {column.label}
                {column.sortable && (
                  <button
                    class="ui-table__sort-btn"
                    type="button"
                    aria-label={`${column.label} 정렬`}
                  >
                    <svg
                      class="ui-table__sort-icon"
                      viewBox="0 0 12 12"
                      fill="none"
                    >
                      <path d="M6 2L9 5H3L6 2Z" fill="currentColor" />
                      <path d="M6 10L3 7H9L6 10Z" fill="currentColor" />
                    </svg>
                  </button>
                )}
              </div>
            </th>
          ))
        }

        {
          showStatus && (
            <th class="ui-table__cell ui-table__cell--head ui-table__cell--action">
              처리상태
            </th>
          )
        }
      </tr>
    </thead>

    <tbody class="ui-table__body">
      {
        rows.map((row, index) => (
          <tr class="ui-table__row ui-table__row--body">
            {showCheckbox && (
              <td class="ui-table__cell ui-table__cell--body ui-table__cell--checkbox">
                <input
                  type="checkbox"
                  class="ui-table__checkbox"
                  value={row.id || index}
                  aria-label={`${index + 1}번 행 선택`}
                />
              </td>
            )}

            {showIndex && (
              <td class="ui-table__cell ui-table__cell--body ui-table__cell--index">
                {row.number || rows.length - index}
              </td>
            )}

            {columns.map(column => {
              const cellValue = row[column.key];
              const columnType = column.type || 'text';

              return (
                <td
                  class="ui-table__cell ui-table__cell--body"
                  style={column.width ? `width: ${column.width}` : undefined}
                >
                  <div
                    class={`ui-table__cell-content ui-table__cell-content--${column.align || 'left'}`}
                  >
                    {/* 텍스트 타입 */}
                    {columnType === 'text' && (
                      <span class="ui-table__text">{cellValue}</span>
                    )}

                    {/* 배지 타입 */}
                    {columnType === 'badge' && cellValue && (
                      <span
                        class={`ui-table__badge ui-table__badge--${cellValue.toLowerCase()}`}
                      >
                        {cellValue}
                      </span>
                    )}

                    {/* 단일 버튼 타입 */}
                    {columnType === 'button' && cellValue && (
                      <button
                        type="button"
                        class={`ui-table__button ui-table__button--${cellValue.variant || 'default'}`}
                        onclick={cellValue.onClick}
                      >
                        {typeof cellValue === 'string'
                          ? cellValue
                          : cellValue.text}
                      </button>
                    )}

                    {/* 복수 버튼 타입 */}
                    {columnType === 'buttons' && Array.isArray(cellValue) && (
                      <div class="ui-table__button-group">
                        {cellValue.map((button, btnIndex) => (
                          <button
                            key={btnIndex}
                            type="button"
                            class={`ui-table__button ui-table__button--${button.variant || 'default'}`}
                            onclick={button.onClick}
                          >
                            {button.text}
                          </button>
                        ))}
                      </div>
                    )}
                  </div>
                </td>
              );
            })}

            {showStatus && (
              <td class="ui-table__cell ui-table__cell--body ui-table__cell--action">
                <div class="ui-table__cell-content ui-table__cell-content--center">
                  {row.status && (
                    <span
                      class={`ui-table__badge ui-table__badge--${row.status.toLowerCase().replace(' ', '-')}`}
                    >
                      {row.status}
                    </span>
                  )}
                </div>
              </td>
            )}
          </tr>
        ))
      }
    </tbody>
  </table>

  {
    rows.length === 0 && (
      <div class="ui-table__empty">
        <p class="ui-table__empty-text">검색 결과가 없습니다.</p>
      </div>
    )
  }
</div>

<style lang="scss">
  @use '@styles/abstracts' as *;
  @use '@styles/variables/colors' as *;
  @use '@styles/variables/typography' as *;

  .ui-table-wrapper {
    margin-top: to-rem(30);
    width: 100%;
    background: $white;
    border: 1px solid $border-color;
    border-radius: to-rem(8);
    overflow: hidden; // 전체 overflow 숨김

    // 스티키 헤더 옵션
    &--sticky {
      .ui-table__head {
        position: sticky;
        top: 0;
        z-index: 10;
        background: $gray-50;

        &::after {
          content: '';
          position: absolute;
          bottom: -1px;
          left: 0;
          right: 0;
          height: 1px;
          background: $border-color;
        }
      }
    }
  }

  .ui-table {
    width: 100%;
    min-width: to-rem(800);
    border-collapse: collapse;
    display: flex;
    flex-direction: column;
    max-height: to-rem(600); // 테이블 최대 높이

    &__caption {
      @include sr-only;
    }

    &__head {
      flex-shrink: 0; // 헤더는 축소되지 않음
      display: table;
      width: 100%;
      table-layout: fixed;
      background: $gray-50;
      border-bottom: 1px solid $border-color;
    }

    &__body {
      flex: 1;
      overflow-y: auto; // tbody만 스크롤
      display: block;
      max-height: to-rem(540); // 헤더 높이를 뺀 높이

      // 스크롤바 스타일링 (선택사항)
      &::-webkit-scrollbar {
        width: to-rem(8);
      }

      &::-webkit-scrollbar-track {
        background: $gray-50;
        border-radius: to-rem(4);
      }

      &::-webkit-scrollbar-thumb {
        background: $gray-300;
        border-radius: to-rem(4);

        &:hover {
          background: $gray-400;
        }
      }
    }

    // tbody가 block일 때 tr도 조정 필요
    &__row--body {
      display: table;
      width: 100%;
      table-layout: fixed;
      min-height: to-rem(56);
      border-bottom: 1px solid $border-color;
      transition: background-color 0.2s ease;

      &:hover {
        background: $gray-50;
      }

      &:last-child {
        border-bottom: none;
      }
    }

    &__cell {
      padding: to-rem(12) to-rem(16);
      vertical-align: middle;

      &:last-child {
        border-right: none;
      }

      &--head {
        font-size: to-rem(15);
        font-weight: 700;
        color: #131416;
        text-align: center;
        background: $gray-50;
        height: to-rem(62);
        line-height: 150%;
        letter-spacing: 0;
        font-family: 'Pretendard GOV', sans-serif;
      }

      &--body {
        font-size: to-rem(15);
        font-weight: 400;
        color: #464c53;
        padding: to-rem(12) to-rem(16);
        line-height: 150%;
        letter-spacing: 0;
        font-family: 'Pretendard GOV', sans-serif;
      }

      &--checkbox {
        width: to-rem(48);
        text-align: center;
        padding: to-rem(8) to-rem(12);
      }

      &--index {
        width: to-rem(60);
        text-align: center;
        font-weight: 500;
        color: $gray-500;
      }

      &--action {
        width: to-rem(120);
        text-align: center;
      }

      &--sortable {
        cursor: pointer;
        user-select: none;

        &:hover {
          background: $gray-100;
        }
      }
    }

    &__cell-content {
      display: flex;
      align-items: center;
      gap: to-rem(4);
      min-height: to-rem(24);
      width: 100%; // 추가

      &--left {
        justify-content: flex-start;
      }

      &--center {
        justify-content: center;
      }

      &--right {
        justify-content: flex-end;
      }
    }

    &__checkbox {
      width: to-rem(16);
      height: to-rem(16);
      cursor: pointer;
      accent-color: $primary-color;
    }

    &__sort-btn {
      @include flex(row, center, center);
      background: none;
      border: none;
      padding: to-rem(2);
      cursor: pointer;
      color: $gray-400;
      transition: color 0.2s ease;
      border-radius: to-rem(2);

      &:hover {
        color: $primary-color;
        background: $gray-50;
      }
    }

    &__sort-icon {
      width: to-rem(10);
      height: to-rem(10);
    }

    &__badge {
      @include flex(row, center, center);
      padding: to-rem(2) to-rem(6);
      border-radius: to-rem(3);
      font-size: to-rem(11);
      font-weight: 500;
      text-align: center;
      white-space: nowrap;
      line-height: 1.2;

      // 도서관별 색상
      &--\[동춘\]일반자료실 {
        background: $blue-50;
        color: $blue-600;
        border: 1px solid $blue-200;
      }

      &--상호대차 {
        background: $orange-50;
        color: $orange-600;
        border: 1px solid $orange-200;
      }

      &--전체 {
        background: $gray-50;
        color: $gray-700;
        border: 1px solid $gray-200;
      }

      // 대출 상태별 색상
      &--비치중 {
        background: #e8f5e8;
        color: $success-color;
        border: 1px solid #c3e6c3;
      }

      &--대출중 {
        background: $red-100;
        color: $red-700;
        border: 1px solid $red-200;
      }

      &--예약가능 {
        background: $blue-50;
        color: $blue-700;
        border: 1px solid $blue-200;
      }

      // 서비스 버튼
      &--예약하기 {
        background: $primary-color;
        color: $white;
        border: 1px solid $primary-color;
        padding: to-rem(4) to-rem(8);
        cursor: pointer;
        transition: all 0.2s ease;

        &:hover {
          background: $blue-800;
          border-color: $blue-800;
        }
      }

      &--new {
        background: $red-500;
        color: $white;
        margin-left: to-rem(4);
        font-size: to-rem(10);
        padding: to-rem(1) to-rem(4);
      }
    }

    &__title-wrapper {
      display: flex;
      justify-content: inherit; // 부모의 justify-content를 상속
      width: 100%;
    }

    &__title-link {
      @include flex(row, center, center);
      gap: to-rem(4);
      color: $text-color;
      text-decoration: none;
      transition: color 0.2s ease;
      width: 100%;
      justify-content: inherit;

      &:hover {
        color: $primary-color;
        text-decoration: underline;
      }
    }

    &__title-content {
      @include flex(row, center, center);
      gap: to-rem(4);
      width: 100%;
      justify-content: inherit;
    }

    &__icon {
      font-size: to-rem(12);
      color: $gray-400;
    }

    &__title-text {
      font-weight: 400;
      font-size: to-rem(15);
      color: #464c53;
      line-height: 150%;
      font-family: 'Pretendard GOV', sans-serif;
    }

    &__text {
      font-size: to-rem(15);
      font-weight: 400;
      color: #464c53;
      line-height: 150%;
      word-break: break-all;
      font-family: 'Pretendard GOV', sans-serif;

      // 청구기호, 등록번호 등 코드형 텍스트
      &--code {
        font-family: 'Courier New', monospace;
        font-size: to-rem(11);
        color: $gray-500;
        letter-spacing: -0.02em;
      }
    }

    &__empty {
      padding: to-rem(40) to-rem(20);
      text-align: center;
      border-top: 1px solid $border-color;

      &-text {
        font-size: to-rem(14);
        color: $gray-400;
        margin: 0;
      }
    }

    &__button {
      padding: to-rem(4) to-rem(12);
      border-radius: to-rem(4);
      font-size: to-rem(13);
      font-weight: 500;
      border: 1px solid transparent;
      cursor: pointer;
      transition: all 0.2s ease;
      white-space: nowrap;

      &--default {
        background: $primary-color;
        color: $white;
        border-color: $primary-color;

        &:hover {
          background: darken($primary-color, 10%);
          border-color: darken($primary-color, 10%);
        }
      }

      &--secondary {
        background: $white;
        color: $primary-color;
        border-color: $primary-color;

        &:hover {
          background: $blue-50;
        }
      }

      &--danger {
        background: $red-500;
        color: $white;
        border-color: $red-500;

        &:hover {
          background: darken($red-500, 10%);
          border-color: darken($red-500, 10%);
        }
      }
    }

    &__button-group {
      display: flex;
      gap: to-rem(8);
      align-items: center;
      justify-content: inherit; // 부모의 정렬 상속
    }
  }

  // 반응형
  @include tablet {
    .ui-table {
      &__cell {
        padding: to-rem(10) to-rem(12);

        &--head {
          font-size: to-rem(12);
        }

        &--body {
          font-size: to-rem(12);
        }
      }

      &__text {
        font-size: to-rem(12);

        &--code {
          font-size: to-rem(10);
        }
      }

      &__badge {
        font-size: to-rem(10);
        padding: to-rem(2) to-rem(4);
      }
    }
  }

  @include mobile {
    .ui-table-wrapper {
      border-radius: 0;
      border-left: none;
      border-right: none;
      margin: 0 to-rem(-16);
    }

    .ui-table {
      min-width: to-rem(600);

      &__cell {
        padding: to-rem(8) to-rem(6);

        &--head {
          font-size: to-rem(11);
          padding: to-rem(6) to-rem(4);
        }

        &--body {
          font-size: to-rem(11);
        }

        &--index {
          width: to-rem(40);
        }

        &--checkbox {
          width: to-rem(32);
          padding: to-rem(4);
        }
      }

      &__row {
        &--head {
          height: to-rem(40);
        }

        &--body {
          height: to-rem(48);
        }
      }

      &__text {
        font-size: to-rem(11);
        line-height: 1.3;

        &--code {
          font-size: to-rem(9);
        }
      }

      &__badge {
        font-size: to-rem(9);
        padding: to-rem(1) to-rem(3);

        &--예약하기 {
          padding: to-rem(3) to-rem(6);
          font-size: to-rem(10);
        }
      }

      &__checkbox {
        width: to-rem(14);
        height: to-rem(14);
      }
    }
  }
</style>
