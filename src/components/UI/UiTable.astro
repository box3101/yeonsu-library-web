---
export interface TableColumn {
  key: string;
  label: string;
  width?: string;
  align?: 'left' | 'center' | 'right';
  headerAlign?: 'left' | 'center' | 'right';
  sortable?: boolean;
}

export interface TableRow {
  [key: string]: any;
  href?: string; // 제목 클릭 시 이동할 링크
  status?: string; // 처리 상태
}

export interface Props {
  /**
   * 테이블 컬럼 정의
   */
  columns: TableColumn[];
  /**
   * 테이블 데이터
   */
  rows: TableRow[];
  /**
   * 테이블 ID
   */
  id?: string;
  /**
   * 추가 CSS 클래스
   */
  class?: string;
  /**
   * 테이블 캐션 (접근성)
   */
  caption?: string;
  /**
   * 체크박스 컬럼 표시 여부
   */
  showCheckbox?: boolean;
  /**
   * 번호 컬럼 표시 여부
   */
  showIndex?: boolean;
  /**
   * 상태 컬럼 표시 여부
   */
  showStatus?: boolean;
}

const {
  columns,
  rows,
  id,
  class: className = '',
  caption,
  showCheckbox = false,
  showIndex = true,
  showStatus = false,
  ...rest
} = Astro.props;

const tableId = id || `table-${Math.random().toString(36).substr(2, 9)}`;
---

<div class={`ui-table-wrapper ${className}`} {...rest}>
  <table class="ui-table" id={tableId}>
    {caption && <caption class="ui-table__caption">{caption}</caption>}

    <thead class="ui-table__head">
      <tr class="ui-table__row ui-table__row--head">
        {
          showCheckbox && (
            <th class="ui-table__cell ui-table__cell--head ui-table__cell--checkbox">
              <input
                type="checkbox"
                class="ui-table__checkbox"
                aria-label="전체 선택"
              />
            </th>
          )
        }

        {
          showIndex && (
            <th class="ui-table__cell ui-table__cell--head ui-table__cell--index">
              번호
            </th>
          )
        }

        {
          columns.map(column => (
            <th
              class={`ui-table__cell ui-table__cell--head ${column.sortable ? 'ui-table__cell--sortable' : ''}`}
              style={column.width ? `width: ${column.width}` : undefined}
            >
              <div
                class={`ui-table__cell-content ui-table__cell-content--${column.headerAlign || column.align || 'left'}`}
              >
                {column.label}
                {column.sortable && (
                  <button
                    class="ui-table__sort-btn"
                    type="button"
                    aria-label={`${column.label} 정렬`}
                  >
                    <svg
                      class="ui-table__sort-icon"
                      viewBox="0 0 12 12"
                      fill="none"
                    >
                      <path d="M6 2L9 5H3L6 2Z" fill="currentColor" />
                      <path d="M6 10L3 7H9L6 10Z" fill="currentColor" />
                    </svg>
                  </button>
                )}
              </div>
            </th>
          ))
        }

        {
          showStatus && (
            <th class="ui-table__cell ui-table__cell--head ui-table__cell--action">
              처리상태
            </th>
          )
        }
      </tr>
    </thead>

    <tbody class="ui-table__body">
      {
        rows.map((row, index) => (
          <tr class="ui-table__row ui-table__row--body">
            {showCheckbox && (
              <td class="ui-table__cell ui-table__cell--body ui-table__cell--checkbox">
                <input
                  type="checkbox"
                  class="ui-table__checkbox"
                  value={row.id || index}
                  aria-label={`${index + 1}번 행 선택`}
                />
              </td>
            )}

            {showIndex && (
              <td class="ui-table__cell ui-table__cell--body ui-table__cell--index">
                {row.number || rows.length - index}
              </td>
            )}

            {columns.map(column => (
              <td
                class="ui-table__cell ui-table__cell--body"
                style={column.width ? `width: ${column.width}` : undefined}
              >
                <div
                  class={`ui-table__cell-content ui-table__cell-content--${column.align || 'left'}`}
                >
                  {column.key === 'institution' && row[column.key] ? (
                    <span
                      class={`ui-table__badge ui-table__badge--${row[column.key].toLowerCase()}`}
                    >
                      {row[column.key]}
                    </span>
                  ) : column.key === 'title' ? (
                    <div class="ui-table__title-wrapper">
                      {row.href ? (
                        <a href={row.href} class="ui-table__title-link">
                          {row.hasIcon && <span class="ui-table__icon">🔒</span>}
                          <span class="ui-table__title-text">{row[column.key]}</span>
                          {row.isNew && (
                            <span class="ui-table__badge ui-table__badge--new">N</span>
                          )}
                        </a>
                      ) : (
                        <div class="ui-table__title-content">
                          {row.hasIcon && <span class="ui-table__icon">🔒</span>}
                          <span class="ui-table__title-text">{row[column.key]}</span>
                          {row.isNew && (
                            <span class="ui-table__badge ui-table__badge--new">N</span>
                          )}
                        </div>
                      )}
                    </div>
                  ) : (
                    <span class="ui-table__text">
                      {row[column.key]}
                    </span>
                  )}
                </div>
              </td>
            ))}

            {showStatus && (
              <td class="ui-table__cell ui-table__cell--body ui-table__cell--action">
                <div class="ui-table__cell-content ui-table__cell-content--center">
                  {row.status && (
                    <span class={`ui-table__badge ui-table__badge--${row.status.toLowerCase().replace(' ', '-')}`}>
                      {row.status}
                    </span>
                  )}
                </div>
              </td>
            )}
          </tr>
        ))
      }
    </tbody>
  </table>

  {
    rows.length === 0 && (
      <div class="ui-table__empty">
        <p class="ui-table__empty-text">검색 결과가 없습니다.</p>
      </div>
    )
  }
</div>

<style lang="scss">
  @use '@styles/abstracts' as *;
  @use '@styles/variables/colors' as *;
  @use '@styles/variables/typography' as *;

  .ui-table-wrapper {
    width: 100%;
    overflow-x: auto;
    background: $white;
    border-radius: to-rem(8);
    border: 1px solid #e5e8eb;
  }

  .ui-table {
    width: 100%;
    border-collapse: collapse;
    font-family: 'Pretendard GOV', sans-serif;

    &__caption {
      @include sr-only;
    }

    &__head {
      background: #f8f9fa;
      border-bottom: 2px solid #e5e8eb;
    }

    &__row {
      &--head {
        height: to-rem(52);
      }

      &--body {
        height: to-rem(60);
        border-bottom: 1px solid #f1f3f4;

        &:hover {
          background: #f8f9fa;
        }

        &:last-child {
          border-bottom: none;
        }
      }
    }

    &__cell {
      padding: to-rem(12) to-rem(12);
      vertical-align: middle;

      &--head {
        font-size: to-rem(14);
        font-weight: 600;
        color: #374151;
        text-align: left;
        border-right: 1px solid #e5e8eb;

        &:last-child {
          border-right: none;
        }
      }

      &--body {
        font-size: to-rem(14);
        font-weight: 400;
        color: #374151;
        border-right: 1px solid #f1f3f4;

        &:last-child {
          border-right: none;
        }
      }

      &--checkbox {
        width: to-rem(48);
        text-align: center;
      }

      &--index {
        width: to-rem(80);
        text-align: center;
        font-weight: 500;
      }

      &--action {
        width: to-rem(100);
        text-align: center;
      }

      &--sortable {
        cursor: pointer;
        user-select: none;

        &:hover {
          background: #f1f3f4;
        }
      }
    }

    &__cell-content {
      @include flex(row, flex-start, center);
      gap: to-rem(8);

      &--center {
        justify-content: center;
      }

      &--right {
        justify-content: flex-end;
      }
    }

    &__checkbox {
      width: to-rem(16);
      height: to-rem(16);
      cursor: pointer;
    }

    &__sort-btn {
      background: none;
      border: none;
      padding: to-rem(4);
      cursor: pointer;
      color: #9ca3af;
      transition: color 0.2s ease;

      &:hover {
        color: $primary-color;
      }
    }

    &__sort-icon {
      width: to-rem(12);
      height: to-rem(12);
    }

    &__badge {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: to-rem(4) to-rem(8);
      border-radius: to-rem(4);
      font-size: to-rem(12);
      font-weight: 500;
      text-align: center;
      min-width: to-rem(32);

      &--송도국제 {
        background: #e3f2fd;
        color: #1976d2;
      }

      &--정학 {
        background: #e8f5e8;
        color: #2e7d32;
      }

      &--등촌1네 {
        background: #fff3e0;
        color: #f57c00;
      }

      &--전체 {
        background: #e8f5e8;
        color: #2e7d32;
      }

      &--해돋이 {
        background: #fff3e0;
        color: #f57c00;
      }

      &--신라별빛 {
        background: #fce4ec;
        color: #c2185b;
      }

      &--new {
        background: #4caf50;
        color: $white;
        margin-left: to-rem(4);
      }

      &--접수대기 {
        background: #ffecb3;
        color: #f57c00;
      }

      &--접수완료 {
        background: #c8e6c9;
        color: #388e3c;
      }

      &--대변완료 {
        background: #bbdefb;
        color: #1976d2;
      }
    }

    &__title-wrapper {
      width: 100%;
    }

    &__title-link {
      @include flex(row, flex-start, center);
      gap: to-rem(6);
      color: #374151;
      text-decoration: none;
      transition: color 0.2s ease;

      &:hover {
        color: $primary-color;
        text-decoration: underline;
      }
    }

    &__title-content {
      @include flex(row, flex-start, center);
      gap: to-rem(6);
    }

    &__icon {
      font-size: to-rem(14);
    }

    &__title-text {
      flex: 1;
    }

    &__text {
      @include flex(row, flex-start, center);
      gap: to-rem(6);
      color: #000;
      font-size: to-rem(17);
      font-weight: 400;
    }

    &__empty {
      padding: to-rem(48);
      text-align: center;

      &-text {
        font-size: to-rem(16);
        color: #6b7280;
      }
    }
  }

  // 반응형
  @include mobile {
    .ui-table-wrapper {
      border-radius: 0;
      border-left: none;
      border-right: none;
    }

    .ui-table {
      &__cell {
        padding: to-rem(8) to-rem(12);

        &--head {
          font-size: to-rem(12);
        }

        &--body {
          font-size: to-rem(13);
        }
      }

      &__row--body {
        height: to-rem(52);
      }
    }
  }
</style>
