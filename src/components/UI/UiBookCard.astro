---
import { UiCollectionAccordion } from '@components';
// 소장정보 데이터

const collectionData = [
  {
    library: '청학',
    readingRoom: '어린이자료실',
    loanStatus: '비치중',
    service: 'reservation' as const,
    callNumber: '아동 813.5-김18ㅎ',
    registrationNumber: 'CJ0000036641',
  },
  {
    library: '선학',
    readingRoom: '어린이자료실',
    loanStatus: '비치중',
    service: 'interlibrary' as const,
    callNumber: '아동 813.5-김18ㅎ',
    registrationNumber: 'GJ0000027414',
  },
  {
    library: '꿈담',
    readingRoom: '어린이자료실',
    loanStatus: '대출중',
    returnDate: '2025.07.31',
    service: 'reservation' as const,
    callNumber: '아동 813.5-김18ㅎ',
    registrationNumber: 'QJ0000028625',
    reservationCount: 0,
  },
  {
    library: '꿈담',
    readingRoom: '어린이자료실',
    loanStatus: '비치중',
    returnDate: '2025.07.31',
    service: 'reservation' as const,
    callNumber: '아동 813.5-김18ㅎ',
    registrationNumber: 'QJ0000028625',
    reservationCount: 0,
    loanStatus: '대출중',
    returnDate: '2025.07.31',
    service: 'reservation' as const,
    callNumber: '아동 813.5-김18ㅎ',
    registrationNumber: 'QJ0000028625',
    reservationCount: 0,
  },
];

const collectionColumns = [
  {
    key: 'title',
    label: '도서관',
    width: '145px',
    headerAlign: 'center',
    align: 'center',
  },
  { key: 'status', label: '대출상태', width: '100px', align: 'center' },
  { key: 'dueDate', label: '반납예정일', width: '120px', align: 'center' },
  {
    key: 'service',
    label: '서비스',
    width: '200px',
    align: 'center',
    type: 'buttons',
  },
  { key: 'callNumber', label: '청구기호', width: '120px', align: 'center' },
  { key: 'regNumber', label: '등록번호', width: '120px', align: 'center' },
  {
    key: 'readingRoom',
    label: '정보 출력',
    width: '100px',
    align: 'center',
    type: 'icon',
  },
];

const collectionRows = collectionData.map((item, index) => ({
  id: index + 1,
  title: item.library + ' ' + item.readingRoom,
  status: item.loanStatus,
  dueDate: item.returnDate || '2025.07.31',
  service: [
    { text: '예약하기', variant: 'default' },
    { text: '상호대차', variant: 'default' },
  ],
  callNumber: item.callNumber,
  regNumber: item.registrationNumber,
  readingRoom: 'icon icon-xmd icon-printer',
}));

export interface Props {
  index?: number;
  imageUrl?: string;
  badges?: Array<{
    label: string;
    type: 'success' | 'warning' | 'tertiary';
    size?: 'large' | 'medium';
  }>;
  title: string;
  titleHighlights?: string[]; // 검색어 하이라이팅을 위한 키워드들
  author: string;
  details: {
    callNumber?: string;
    publishYear?: string;
    library?: string;
    readingRoom?: string;
    registrationNumber?: string;
  };
  onAddToMyLibrary?: () => void;
  onViewDetails?: () => void;
  onViewHoldings?: () => void;
}

const {
  index,
  imageUrl = './assets/images/default-book.png',
  badges = [],
  title,
  titleHighlights = [],
  author,
  details,
  onAddToMyLibrary,
  onViewHoldings,
} = Astro.props;

// 제목에서 검색어 하이라이팅 처리
function highlightTitle(title: string, highlights: string[]): string {
  if (!highlights.length) return title;

  let highlightedTitle = title;
  highlights.forEach(keyword => {
    const regex = new RegExp(`(${keyword})`, 'gi');
    highlightedTitle = highlightedTitle.replace(
      regex,
      '<span class="text-primary">$1</span>'
    );
  });

  return highlightedTitle;
}

const highlightedTitle = highlightTitle(title, titleHighlights);
---

<div class="ui-book-card">
  <div class="ui-book-card__container">
    <!-- 왼쪽: 인덱스 + 이미지 영역 -->
    <div class="ui-book-card__left">
      {
        index && (
          <div class="ui-book-card__index">
            <span class="ui-book-card__index-number">{index}.</span>
          </div>
        )
      }

      <div class="ui-book-card__image-wrapper">
        <div class="ui-book-card__image-container">
          <div class="ui-book-card__image-mask">
            <a
              href="/01-1.소장도서검색_상세검색"
              class="ui-book-card__image-link"
            >
              <img src={imageUrl} alt={title} class="ui-book-card__image" />
            </a>
          </div>
          <div class="ui-book-card__image-overlay">
            <button
              class="ui-book-card__add-button"
              onclick={onAddToMyLibrary}
              type="button"
            >
              <span>내책장담기</span>
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path
                  d="M10 4V16M4 10H16"
                  stroke="currentColor"
                  stroke-width="1.5"
                  stroke-linecap="round"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- 오른쪽: 콘텐츠 영역 -->
    <div class="ui-book-card__content">
      <!-- 상단: 배지들 -->
      {
        badges.length > 0 && (
          <div class="ui-book-card__badges">
            {badges.map(badge => (
              <span
                class={`ui-book-card__badge ui-book-card__badge--${badge.type} ${badge.size ? `ui-book-card__badge--${badge.size}` : ''}`}
              >
                {badge.label}
              </span>
            ))}
          </div>
        )
      }

      <!-- 메인 콘텐츠 -->
      <div class="ui-book-card__main">
        <!-- 제목 및 메타 정보 -->
        <div class="ui-book-card__title-section">
          <a href="./01-1.소장도서검색_상세검색">
            <h3 class="ui-book-card__title" set:html={highlightedTitle} />
          </a>
          <p class="ui-book-card__author">{author}</p>

          <!-- 상세 정보 그리드 -->
          <div class="ui-book-card__details">
            <div class="ui-book-card__details-row">
              <div class="ui-book-card__details-column">
                {
                  details.callNumber && (
                    <div class="ui-book-card__detail-item">
                      <span class="ui-book-card__detail-label">청구기호</span>
                      <span class="ui-book-card__detail-value">
                        {details.callNumber}
                      </span>
                    </div>
                  )
                }
                {
                  details.publishYear && (
                    <div class="ui-book-card__detail-item">
                      <span class="ui-book-card__detail-label">발행연도</span>
                      <span class="ui-book-card__detail-value">
                        {details.publishYear}
                      </span>
                    </div>
                  )
                }
                {
                  details.library && (
                    <div class="ui-book-card__detail-item">
                      <span class="ui-book-card__detail-label">도서관</span>
                      <span class="ui-book-card__detail-value">
                        {details.library}
                      </span>
                    </div>
                  )
                }
              </div>

              <div class="ui-book-card__details-column">
                {
                  details.readingRoom && (
                    <div class="ui-book-card__detail-item">
                      <span class="ui-book-card__detail-label">자료실</span>
                      <span class="ui-book-card__detail-value">
                        {details.readingRoom}
                      </span>
                    </div>
                  )
                }
                {
                  details.callNumber && (
                    <div class="ui-book-card__detail-item">
                      <span class="ui-book-card__detail-label">청구기호</span>
                      <span class="ui-book-card__detail-value">
                        {details.callNumber}
                      </span>
                    </div>
                  )
                }
                {
                  details.registrationNumber && (
                    <div class="ui-book-card__detail-item">
                      <span class="ui-book-card__detail-label">등록번호</span>
                      <span class="ui-book-card__detail-value">
                        {details.registrationNumber}
                      </span>
                    </div>
                  )
                }
              </div>
            </div>
          </div>
        </div>

        <!-- 하단 버튼들 -->
        <div class="ui-book-card__actions">
          <UiButton
            variant="tertiary"
            size="medium"
            text="도서정보"
            iconPosition="left"
          />
          <UiButton
            variant="secondary"
            size="medium"
            text="소장정보"
            class="ui-book-card__action-button ui-book-card__action-button--primary collection-toggle-button"
          />
        </div>
      </div>
    </div>
  </div>
  <!-- 소장정보 내용 -->
  <div class="ui-book-card__collection-wrapper" style="display: none;">
    <UiCollectionAccordion
      columns={collectionColumns}
      rows={collectionRows}
      isExpanded={true}
      iconType="close"
      className="book-card-accordion"
    />
  </div>
</div>

<!-- 외부 JS 파일에서 처리: collection.js -->

<style lang="scss" is:global>
  .ui-book-card__collection-wrapper {
    margin-top: 16px;

    .ui-collection-accordion {
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
  }
</style>
