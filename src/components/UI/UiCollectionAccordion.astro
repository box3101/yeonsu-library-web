---
import { UiTab, UiTable } from '@components';
import type { TableColumn, TableRow } from './UiTable.astro';

export interface TabOption {
  id: string;
  label: string;
  active?: boolean;
}

export interface Props {
  title: string;
  isExpanded?: boolean;
  iconType?: 'arrow' | 'close';
  className?: string;
  tabsClassName?: string;
  columns: TableColumn[];
  rows: TableRow[];
  tabs?: TabOption[];
}

const {
  title,
  isExpanded = true,
  iconType = 'arrow',
  className = '',
  tabsClassName = '',
  columns,
  rows,
  tabs = [
    { id: 'all', label: '전체(3)', active: true },
    { id: 'okryeon2', label: '옥련2동어린이작은도서관' },
    { id: 'okryeon2-2', label: '옥련2동어린이작은도서관' },
    { id: 'okryeon2-3', label: '옥련2동어린이작은도서관' },
    { id: 'okryeon2-4', label: '옥련2동어린이작은도서관' },
    { id: 'okryeon2-5', label: '옥련2동어린이작은도서관' },
    { id: 'okryeon2-6', label: '옥련2동어린이작은도서관' },
    { id: 'okryeon2-7', label: '옥련2동어린이작은도서관' },
  ],
} = Astro.props;

const accordionId = `accordion-${Math.random().toString(36).substr(2, 9)}`;
---

<div
  class={`ui-collection-accordion ${className}`}
  data-accordion-id={accordionId}
  data-icon-type={iconType}
>
  {iconType === 'close' ? (
    <!-- close 타입일 때: 버튼이 아닌 일반 div + 별도 close 버튼 -->
    <div class="ui-collection-accordion__trigger">
      <div class="ui-collection-accordion__trigger-content">
        <span class="ui-collection-accordion__title">{title}</span>
      </div>
      <button
        type="button"
        class="ui-collection-accordion__close-btn"
        aria-label="소장정보 닫기"
      >
        <img src="./assets/images/icon/icon-close.svg" class="icon icon-close" />
      </button>
    </div>
  ) : (
    <!-- arrow 타입일 때: 기존 버튼 방식 -->
    <button
      type="button"
      class="ui-collection-accordion__trigger"
      aria-expanded={isExpanded}
      aria-controls={accordionId}
    >
      <div class="ui-collection-accordion__trigger-content">
        <span class="ui-collection-accordion__title">{title}</span>
      </div>
      <img src="./assets/images/icon/icon-arrow-down.svg" class="icon icon-arrow-down" />
    </button>
  )}

  <div
    id={accordionId}
    class="ui-collection-accordion__content"
    data-expanded={isExpanded ? "true" : "false"}
  >
    <div class="ui-collection-accordion__inner">
      <!-- 도서관 필터 탭 -->
      <UiTab
        tabs={tabs}
        variant="default"
        size="medium"
        showCount={false}
        className={`mb-4 search-type-tabs ${tabsClassName || ''}`}
      />


      <!-- 소장정보 테이블 -->
      <UiTable
        columns={columns}
        rows={rows}
        caption="소장정보 목록"
        showIndex={false}
        showCheckbox={false}
        stickyHeader={true}
        maxHeight="350px"
      />
    </div>
  </div>
</div>

<!-- 외부 JS 파일에서 처리: accordion.js -->
