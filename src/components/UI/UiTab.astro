---
export interface Props {
  tabs: Array<{
    id: string;
    label: string;
    count?: number;
    active?: boolean;
  }>;
  variant?: 'default' | 'pills' | 'minimal';
  size?: 'small' | 'medium' | 'large';
  layout?: 'row' | 'grid'; // 레이아웃 타입 추가
  gridColumns?: number; // 그리드 열 개수 (layout이 'grid'일 때 사용)
  showCount?: boolean; // count 표시 여부 추가
  className?: string;
}

const {
  tabs,
  variant = 'default',
  size = 'medium',
  layout = 'row',
  gridColumns = 4,
  showCount = true, // 기본값 true (기존 동작 유지)
  className = '',
} = Astro.props;

const tabClasses = [
  'ui-tab',
  `ui-tab--${variant}`,
  `ui-tab--${size}`,
  `ui-tab--${layout}`,
  className,
]
  .filter(Boolean)
  .join(' ');

// 그리드 레이아웃일 때 인라인 스타일 설정
const listStyles =
  layout === 'grid'
    ? {
        '--grid-columns': gridColumns,
      }
    : {};
---

<div class={tabClasses}>
  <div class="ui-tab__list" role="tablist" style={listStyles}>
    {
      tabs.map(tab => (
        <button
          class={`ui-tab__button ${tab.active ? 'ui-tab__button--active' : ''}`}
          role="tab"
          aria-selected={tab.active}
          aria-controls={`panel-${tab.id}`}
          id={`tab-${tab.id}`}
          data-tab-target={tab.id}
        >
          <span class="ui-tab__label">{tab.label}</span>
          {showCount && tab.count !== undefined && (
            <span class="ui-tab__count">
              ({tab.count.toString().padStart(4, '0')})
            </span>
          )}
        </button>
      ))
    }
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // 모든 탭 버튼에 클릭 이벤트 추가
    const tabButtons = document.querySelectorAll('.ui-tab__button');

    tabButtons.forEach(button => {
      button.addEventListener('click', function () {
        const tabContainer = this.closest('.ui-tab');
        const targetId = this.dataset.tabTarget;

        // 같은 컨테이너의 모든 탭 비활성화
        const allButtons = tabContainer.querySelectorAll('.ui-tab__button');
        allButtons.forEach(btn => {
          btn.classList.remove('ui-tab__button--active');
          btn.setAttribute('aria-selected', 'false');
        });

        // 클릭된 탭 활성화
        this.classList.add('ui-tab__button--active');
        this.setAttribute('aria-selected', 'true');

        // 커스텀 이벤트 발생
        const customEvent = new CustomEvent('tab-change', {
          detail: {
            tabId: targetId,
            tabElement: this,
            tabContainer: tabContainer,
          },
          bubbles: true,
        });

        tabContainer.dispatchEvent(customEvent);
      });
    });
  });
</script>
