---
export interface Props {
  tabs: Array<{
    id: string;
    label: string;
    count?: number;
    active?: boolean;
    icon?: string;
  }>;
  variant?: 'default' | 'pills' | 'minimal';
  size?: 'small' | 'medium' | 'large';
  showCount?: boolean; // count 표시 여부 추가
  className?: string;
}

const {
  tabs,
  variant = 'default',
  size = 'medium',
  showCount = true, // 기본값 true (기존 동작 유지)
  className = '',
} = Astro.props;

const tabClasses = ['ui-tab', `ui-tab--${variant}`, `ui-tab--${size}`, className].filter(Boolean).join(' ');
---

<div class={tabClasses}>
  <div class="ui-tab__list" role="tablist">
    {
      tabs.map(tab => (
        <button
          class={`ui-tab__button ${tab.active ? 'ui-tab__button--active' : ''}`}
          role="tab"
          aria-selected={tab.active}
          aria-controls={`panel-${tab.id}`}
          id={`tab-${tab.id}`}
          data-tab-target={tab.id}>
          {tab.icon && (
            <div class="ui-tab__icon">
              <img src={tab.icon} alt={tab.label} />
            </div>
          )}
          <span class="ui-tab__label">{tab.label}</span>
          {showCount && tab.count !== undefined && <span class="ui-tab__count">({tab.count.toString().padStart(4, '0')})</span>}
        </button>
      ))
    }
  </div>
</div>

<!-- 외부 JS 파일에서 처리: tab.js -->
