---
export interface Props {
  /**
   * 버튼 방향
   */
  direction: 'prev' | 'next' | 'stop';
  /**
   * 버튼 크기 (rem 단위)
   */
  size?: number;
  /**
   * 비활성화 여부
   */
  disabled?: boolean;
  /**
   * 클릭 핸들러 함수명
   */
  onClick?: string;
  /**
   * 추가 CSS 클래스
   */
  class?: string;
  /**
   * 접근성을 위한 aria-label
   */
  ariaLabel?: string;
}

const {
  direction,
  size = 40,
  disabled = false,
  onClick,
  class: className = '',
  ariaLabel,
  ...rest
} = Astro.props;

const defaultAriaLabel =
  direction === 'prev' ? '이전' : direction === 'next' ? '다음' : '정지';
const buttonAriaLabel = ariaLabel || defaultAriaLabel;

// bg-primary 클래스가 있으면 아이콘에 white 클래스 추가
const hasPrimaryBg = className.includes('bg-primary');
const iconWhiteClass = hasPrimaryBg ? 'icon-white' : '';
---

<button
  type="button"
  class={`ui-nav-button ui-nav-button--${direction} ${className}`}
  style={`width: ${size / 16}rem; height: ${size / 16}rem;`}
  disabled={disabled}
  aria-label={buttonAriaLabel}
  onclick={onClick}
  {...rest}
>
  {
    direction === 'prev' ? (
      <i class={`icon icon-sm icon-arr-left ${iconWhiteClass}`} />
    ) : direction === 'next' ? (
      <i class={`icon icon-sm icon-arr-right ${iconWhiteClass}`} />
    ) : direction === 'stop' ? (
      <i class={`icon icon-sm icon-stop ${iconWhiteClass}`} />
    ) : direction === 'stop-bold' ? (
      <i class={`icon icon-sm icon-stop-bold ${iconWhiteClass}`} />
    ) : null
  }
</button>

<style lang="scss">
  @use '@styles/abstracts' as *;
  @use '@styles/variables/colors' as *;

  .ui-nav-button {
    @include flex-center;
    border-radius: to-rem(12);
    background: $white;
    cursor: pointer;
    transition: all 0.2s ease;
    padding: 0;
    border: 1px solid var(--color-border-gray-light, #cdd1d5);

    &.bg-primary {
      background: $primary-color;
      border: none;

      &:hover {
        background: $primary-color !important;
      }
    }

    &:hover:not(:disabled) {
      background: #f3f3f3;
      border-color: #a0a0a0;
    }

    &:focus {
      outline: to-rem(2) solid $primary-color;
      outline-offset: to-rem(2);
    }

    &:active:not(:disabled) {
      transform: scale(0.98);
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background: #f5f5f5;
      border-color: #ddd;
    }

    &__icon {
      width: to-rem(24);
      height: to-rem(24);
      color: $gray-600;
      transition: color 0.2s ease;
    }

    &:hover:not(:disabled) &__icon {
      color: $text-color;
    }

    &:disabled &__icon {
      color: #999;
    }

    // 특정 방향별 추가 스타일링이 필요한 경우
    &--prev {
      // 이전 버튼 전용 스타일
    }

    &--next {
      // 다음 버튼 전용 스타일
    }
  }
</style>
