---
export interface Props {
  /**
   * 버튼 방향
   */
  direction: 'prev' | 'next' | 'stop' | 'stop-white';
  /**
   * 버튼 크기 (rem 단위)
   */
  size?: number;
  /**
   * 비활성화 여부
   */
  disabled?: boolean;
  /**
   * 클릭 핸들러 함수명
   */
  onClick?: string;
  /**
   * 추가 CSS 클래스
   */
  class?: string;
  /**
   * 접근성을 위한 aria-label
   */
  ariaLabel?: string;
}

const { direction, size = 40, disabled = false, onClick, class: className = '', ariaLabel, ...rest } = Astro.props;

const defaultAriaLabel = direction === 'prev' ? '이전' : direction === 'next' ? '다음' : '정지';
const buttonAriaLabel = ariaLabel || defaultAriaLabel;

// ui-nav-button--primary 클래스가 있으면 아이콘에 white 클래스 추가
const iconWhiteClass = className.includes('ui-nav-button--primary') ? 'icon-white' : '';
---

<button
  type="button"
  class={`ui-nav-button ui-nav-button--${direction} ${className}`}
  style={`width: ${size / 16}rem; height: ${size / 16}rem;`}
  disabled={disabled}
  aria-label={buttonAriaLabel}
  onclick={onClick}
  {...rest}
>
  {
    direction === 'prev' ? (
      <img src="./assets/images/icon/icon-arr-left.svg" class="icon icon-arr-left" />
    ) : direction === 'next' ? (
      <img src="./assets/images/icon/icon-arr-right.svg" class="icon icon-arr-right" />
    ) : direction === 'stop' ? (
      <img src="./assets/images/icon/icon-stop.svg" class="icon icon-stop" />
    ) : direction === 'stop-bold' ? (
      <img src="./assets/images/icon/icon-stop-bold.svg" class="icon icon-stop-bold" />
    ) : direction === 'stop-white' ? (
      <img src="./assets/images/icon/icon-stop-white.svg" class="icon icon-stop-white" />
    ) : null
  }
</button>
