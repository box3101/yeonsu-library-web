---
export interface Props {
  /**
   * select의 id 속성
   */
  id?: string;
  /**
   * select의 name 속성
   */
  name?: string;
  /**
   * select의 기본값
   */
  value?: string;
  /**
   * 크기 variant
   */
  size?: 'small' | 'medium' | 'large';
  /**
   * 너비 variant
   */
  width?: 'auto' | 'full' | 'fit';
  /**
   * 비활성화 여부
   */
  disabled?: boolean;
  /**
   * 필수 입력 여부
   */
  required?: boolean;
  /**
   * 스타일 variant
   */
  variant?: 'default' | 'ghost';
  /**
   * 추가 CSS 클래스
   */
  class?: string;
  /**
   * 옵션 배열
   */
  options: Array<{
    value: string;
    label: string;
    disabled?: boolean;
  }>;
}

const {
  id,
  name,
  value,
  size = 'medium',
  width = 'auto',
  disabled = false,
  required = false,
  variant = 'default',
  class: className = '',
  options = [],
  ...rest
} = Astro.props;

const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;

// 클래스 조합
const selectClasses = [
  'ui-select',
  `ui-select--${variant}`,
  `ui-select--${size}`,
  `ui-select--width-${width}`,
  className,
]
  .filter(Boolean)
  .join(' ');
---

<div class={selectClasses}>
  <div class="ui-select__wrapper">
    <select
      id={selectId}
      name={name}
      disabled={disabled}
      required={required}
      class="ui-select__element"
      {...rest}
    >
      {
        options.map(option => (
          <option
            value={option.value}
            disabled={option.disabled}
            selected={value === option.value}
          >
            {option.label}
          </option>
        ))
      }
    </select>
    <div class="ui-select__arrow">
      <svg viewBox="0 0 20 20" fill="none">
        <path
          d="m6 8 4 4 4-4"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
    </div>
  </div>
</div>
