---
import { menuConfig, getMenuTypeFromPath } from '@/data/menuData';

export interface Props {
  menuType?: string;
}

// Props에서 menuType을 받거나, URL 기반으로 자동 감지
const { menuType } = Astro.props;
const currentPath = Astro.url.pathname;
const decodedCurrentPath = decodeURIComponent(currentPath); // URL 디코딩
const detectedMenuType = menuType || getMenuTypeFromPath(currentPath);

// 해당하는 메뉴 데이터 가져오기
const currentMenu = menuConfig[detectedMenuType];
const menuItems = currentMenu?.sections || [];

// URL 비교 함수
const isActivePath = (href: string) => {
  return currentPath === href || decodedCurrentPath === href || currentPath === encodeURIComponent(href);
};
---

<nav class="left-menu-nav">
  <div class="left-menu-title">
    <h2 class="left-menu-title-text">{currentMenu?.title || '메뉴'}</h2>
  </div>
  {
    menuItems.map((section, index) => (
      <div class="menu-section">
        {section.href ? (
          <!-- 2depth만 있는 경우: 직접 링크 -->
          <a
            href={section.href}
            class={`menu-section-title direct-link ${isActivePath(section.href) ? 'active' : ''}`}
          >
            <span class="menu-title-text">{section.title}</span>
          </a>
        ) : (
          <!-- 3depth가 있는 경우: 토글 버튼 -->
          <>
            <button
              class={`menu-section-title ${section.isExpanded ? 'expanded' : ''}`}
              data-menu-toggle={index}
              aria-expanded={section.isExpanded}
            >
              <span class="menu-title-text">{section.title}</span>
              <svg
                class="menu-arrow"
                width="12"
                height="8"
                viewBox="0 0 12 8"
                fill="none"
              >
                <path
                  d="M1 1L6 6L11 1"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                />
              </svg>
            </button>
            <ul
              class={`menu-list ${section.isExpanded ? 'expanded' : ''}`}
              data-menu-content={index}
            >
              {section.items?.map(item => (
                <li class="menu-item">
                  <a
                    href={item.href}
                    class={`menu-link ${isActivePath(item.href) ? 'active' : ''}`}
                  >
                    {item.label}
                  </a>
                </li>
              ))}
            </ul>
          </>
        )}
      </div>
    ))
  }
</nav>
