---
const menuCategories = [
 "도서검색",
 "책 읽는 연수구", 
 "안내마당",
 "도서서비스",
 "열린참여마당",
 "문화마당",
 "도서관소개"
];

// 타입 정의
interface MenuItem {
 title: string;
 url?: string;
 children?: MenuItem[];
}

interface MenuSection {
 title: string;
 children: MenuItem[];
}

// 각 카테고리별 메뉴 데이터 (2depth, 3depth 구조)
const menuData: Record<string, MenuSection[]> = {
 "도서검색": [
   {
     title: "도서검색",
     children: [
       { title: "소장도서검색", url: "/01_소장도서검색" },
       { title: "통합검색", url: "/05_통합검색" },
       { 
         title: "인기/신착/추천도서",
         url: "/search/popular",
         children: [
           { title: "인기도서", url: "/06_인기도서" },
           { title: "신착도서", url: "/search/popular/new" },
           { title: "추천도서", url: "/search/popular/recommended" },
         ]
       },
       { title: "인생서가", url: "/search/life-books" },
       { title: "스쿨북스", url: "/search/school-books" },
       { 
         title: "도서탐색", 
         url: "/search/explore",
         children: [
           { title: "카테고리분류", url: "/search/explore/category" },
           { title: "한국십진분류", url: "/search/explore/decimal" },
         ]
       },
       { title: "스마트도서관비치도서", url: "/02_스마트도서관비치도서" },
     ]
   },
 ],
 
 "책 읽는 연수구": [
   {
     title: "책 읽는 연수구",
     children: [
       { title: "북스타트", url: "/reading-yeonsu/bookstart" },
       { title: "북메이트", url: "/reading-yeonsu/bookmate" },
       { title: "독서동아리 지원 사업", url: "/reading-yeonsu/reading-clubs" },
       { title: "범구민 책읽어주기 문화운동", url: "/reading-yeonsu/reading-campaign" },
       { title: "북크로싱 센터", url: "/reading-yeonsu/bookcrossing" },
       { title: "영유아 전집 대여 사업", url: "/reading-yeonsu/children-books" },
     ]
   }
 ],
 
 "안내마당": [
   {
     title: "안내마당",
     children: [
       { title: "공지사항", url: "/04_공지사항" },
       { title: "신간희망자료", url: "/info/new-request" },
       { title: "도서관 유튜브", url: "/info/youtube" },
       { title: "도서관 소식지", url: "/info/newsletter" },
       { title: "연수구 지역서점", url: "/info/local-bookstores" },
       { title: "부대시설", url: "/info/facilities" },
       { title: "자주하는 질문", url: "/info/faq" },
     ]
   }
 ],
 
 "도서서비스": [
   {
     title: "도서서비스",
     children: [
       { title: "통합도서서비스", url: "/service/integrated" },
       { title: "상호대차서비스", url: "/service/interlibrary" },
       { title: "책바다서비스", url: "/service/bookbada" },
       { title: "책나래서비스", url: "/service/booknare" },
       { title: "모바일도서관", url: "/service/mobile" },
       { title: "스마트도서관", url: "/service/smart" },
       { title: "전자도서관", url: "/service/ebooks" },
       {
         title: "희망도서 신청",
         url: "/service/book-request",
         children: [
           { title: "서비스 안내", url: "/service/book-request/info" },
           { title: "서비스 신청", url: "/service/book-request/apply" },
         ]
       },
       {
         title: "희망전자책 신청",
         url: "/service/ebook-request",
         children: [
           { title: "서비스 안내", url: "/service/ebook-request/info" },
           { title: "서비스 신청", url: "/service/ebook-request/apply" },
         ]
       },
       {
         title: "무료택배도서대출",
         url: "/service/delivery",
         children: [
           { title: "서비스 안내", url: "/service/delivery/info" },
           { title: "서비스 신청", url: "/service/delivery/apply" },
         ]
       },
     ]
   }
 ],
 
 "열린참여마당": [
   {
     title: "열린참여마당",
     children: [
       { title: "도서관에 바란다", url: "/03_도서관에바란다" },
       { title: "자원봉사", url: "/participation/volunteer" },
       {
         title: "도서관 견학",
         url: "/participation/tour",
         children: [
           { title: "도서관 견학 안내", url: "/participation/tour/info" },
           { title: "도서관 견학 신청", url: "/participation/tour/apply" },
         ]
       },
       {
         title: "도서기증",
         url: "/participation/donation",
         children: [
           { title: "기증안내", url: "/participation/donation/info" },
           { title: "서약서작성", url: "/participation/donation/pledge" },
           { title: "기증신청조회", url: "/participation/donation/status" },
         ]
       },
       {
         title: "독서마라톤",
         url: "/participation/reading-marathon",
         children: [
           { title: "독서마라톤 안내", url: "/participation/reading-marathon/info" },
           { title: "독서마라톤 참여", url: "/participation/reading-marathon/join" },
         ]
       },
       {
         title: "독서왕",
         url: "/participation/reading-king",
         children: [
           { title: "독서왕 안내", url: "/participation/reading-king/info" },
           { title: "독서왕 참여", url: "/participation/reading-king/join" },
         ]
       },
       {
         title: "출석체크 이벤트",
         url: "/participation/attendance",
         children: [
           { title: "출석체크 안내", url: "/participation/attendance/info" },
           { title: "출석하기", url: "/participation/attendance/check" },
         ]
       },
     ]
   }
 ],
 
 "문화마당": [
   {
     title: "문화마당",
     children: [
       { title: "문화행사 신청", url: "/culture/events" },
       { title: "프로그램 신청", url: "/culture/programs" },
       {
         title: "영화상영",
         url: "/culture/movies",
         children: [
           { title: "이용안내", url: "/culture/movies/info" },
           { title: "상영작", url: "/culture/movies/schedule" },
         ]
       },
       {
         title: "대관신청",
         url: "/culture/rental",
         children: [
           { title: "공연장(청학,꿈담,송도,해돋이)", url: "/culture/rental/performance" },
           { title: "세미나실대관(청학)", url: "/culture/rental/seminar" },
           { title: "커뮤니티룸대관(동춘)", url: "/culture/rental/community" },
           { title: "프로그램실(함박)", url: "/culture/rental/program" },
           { title: "독서토론실대관(송도)", url: "/culture/rental/discussion" },
           { title: "하늘빛정원대관(청학)", url: "/culture/rental/garden" },
           { title: "동아리실대관(꿈담)", url: "/culture/rental/club" },
         ]
       },
     ]
   }
 ],
 
 "도서관소개": [
   {
     title: "도서관소개",
     children: [
       { title: "인사말", url: "/about/greeting" },
       { title: "연혁", url: "/about/history" },
       { title: "상징", url: "/about/symbol" },
       { title: "조직도", url: "/about/organization" },
       { title: "자료현황", url: "/about/materials" },
       {
         title: "구립도서관",
         url: "/about/libraries",
         children: [
           { title: "송도국제도서관", url: "/about/libraries/songdo" },
           { title: "연수청학도서관", url: "/about/libraries/cheonghak" },
           { title: "연수꿈담도서관", url: "/about/libraries/ggumdam" },
           { title: "송도국제어린이도서관", url: "/about/libraries/songdo-children" },
           { title: "해돋이도서관", url: "/about/libraries/haedoji" },
           { title: "선학별빛도서관", url: "/about/libraries/sunhak" },
           { title: "동춘나래도서관", url: "/about/libraries/dongchun" },
           { title: "함박비류도서관", url: "/about/libraries/hambak" },
         ]
       },
       {
         title: "공립작은도서관",
         url: "/about/small-libraries",
         children: [
           { title: "옥련1동작은도서관", url: "/about/small-libraries/okryeon1" },
           { title: "옥련2동어린이작은도서관", url: "/about/small-libraries/okryeon2-children" },
           { title: "연수1동작은도서관", url: "/about/small-libraries/yeonsu1" },
           { title: "송도2동작은도서관", url: "/about/small-libraries/songdo2" },
           { title: "송도3동작은도서관", url: "/about/small-libraries/songdo3" },
           { title: "송도5동작은도서관", url: "/about/small-libraries/songdo5" },
           { title: "솔안공원작은도서관", url: "/about/small-libraries/solan-park" },
           { title: "해찬솔공원작은도서관", url: "/about/small-libraries/haechansol-park" },
           { title: "누리공원작은도서관", url: "/about/small-libraries/nuri-park" },
           { title: "문화공원 북크로싱 센터", url: "/about/small-libraries/culture-park-bookcrossing" },
         ]
       },
     ]
   }
 ]
};
---

<!-- 모바일 메뉴 오버레이 -->
<div class="mobile-menu-overlay" id="mobileMenuOverlay"></div>

<!-- 모바일 메뉴 -->
<div class="mobile-menu" id="mobileMenu">
  <!-- 모바일 메뉴 헤더 -->
  <div class="mobile-menu-header">
    <!-- 유틸리티 영역 -->
    <div class="mobile-menu-utility">
    <button type="button" class="mobile-menu-close" id="mobileMenuClose" aria-label="메뉴 닫기">
        <i class="icon icon-close"></i>
      </button>
    </div>

    <!-- 로그인 영역 -->
    <div class="mobile-menu-login">
      <i class="icon icon-login"></i>
      <span>로그인을 해주세요</span>
    </div>


    <!-- 검색 영역 -->
    <div class="mobile-menu-search">
      <div class="search-box">
        <input type="text" placeholder="메뉴명을 입력해주세요" class="search-input">
        <i class="icon icon-search"></i>
      </div>
    </div>
  </div>

  <!-- 모바일 메뉴 콘텐츠 -->
  <div class="mobile-menu-content">
    <!-- 1depth 바 (좌측 고정) -->
    <div class="mobile-menu-depth-bar">
      {menuCategories.map((category, index) => (
              <button
                type="button"
          class={`depth-bar-item ${index === 0 ? 'selected' : ''}`}
          data-category={category}
          data-index={index}
        >
          {category}
              </button>
      ))}
          </div>

    <!-- 2-3depth 메뉴 영역 (우측) -->
    <div class="mobile-menu-detail">
      {menuCategories.map((category, categoryIndex) => (
        <div
          class={`menu-detail-content ${categoryIndex === 0 ? 'active' : ''}`}
          data-content={category}
        >
          {menuData[category]?.map((menu, menuIndex) => (
            <div class="menu-section">
              <!-- 1depth 타이틀 -->
              <div class="menu-section-title">
                <h3>{menu.title}</h3>
              </div>

              <!-- 2depth 메뉴들 -->
              <div class="menu-section-items">
                {menu.children?.map((child: MenuItem, childIndex: number) => (
                  <div class="menu-item-group">
                    {child.children ? (
                      <!-- 3depth가 있는 경우: 버튼으로 처리 -->
                      <button
                        type="button"
                        class={`menu-item-toggle ${menuIndex === 0 && childIndex === 0 ? 'selected expanded' : ''}`}
                        data-toggle={`${categoryIndex}-${menuIndex}-${childIndex}`}
                      >
                        <span>{child.title}</span>
                        <i class="icon icon-arrow-down"></i>
                      </button>
                    ) : (
                      <!-- 3depth가 없는 경우: 링크로 처리 -->
                      <a href={child.url} class="menu-item-link">
                        <span>{child.title}</span>
                      </a>
                    )}

                    <!-- 3depth 서브메뉴 -->
                    {child.children && (
                      <div class={`menu-submenu ${menuIndex === 0 && childIndex === 0 ? 'active' : ''}`} data-submenu={`${categoryIndex}-${menuIndex}-${childIndex}`}>
                        {child.children.map((subChild: MenuItem) => (
                          <a href={subChild.url} class="menu-submenu-link">
                            <span class="bullet"></span>
                            <span>{subChild.title}</span>
                          </a>
                          ))}
                        </div>
                  )}
                </div>
              ))}
              </div>
            </div>
          ))}
        </div>
      ))}
    </div>
  </div>

  <!-- 유틸리티 그룹 (하단) -->
</div>

<!-- 모바일 메뉴 토글 버튼 -->
<button type="button" class="mobile-menu-trigger" id="mobileMenuTrigger" aria-label="메뉴 열기">
  <span class="mobile-menu-trigger-bar"></span>
  <span class="mobile-menu-trigger-bar"></span>
  <span class="mobile-menu-trigger-bar"></span>
</button>

<style lang="scss">
  @use '@styles/abstracts' as *;

  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1998;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;

    &.active {
      opacity: 1;
      visibility: visible;
    }
  }

  .mobile-menu {
    position: fixed;
    top: 0;
    right: 0;
    width: to-rem(360);
    height: 100vh;
    background: #ffffff;
    z-index: 1999;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;

    &.active {
      transform: translateX(0);
    }

    // 헤더 영역
    &-header {
      @include flex(column, flex-start, stretch);
      gap: to-rem(16);
      padding: to-rem(16);
      border-bottom: 1px solid #cdd1d5;
    }

    // 유틸리티 영역
    &-utility {
      @include flex(row, space-between, center);
      gap: to-rem(112);

      .utility-left {
        @include flex(row, flex-start, center);
        gap: to-rem(16);
      }

      .utility-btn {
        @include flex(row, center, center);
        gap: to-rem(4);
        padding: 0 to-rem(2);
        height: to-rem(32);
        background: transparent;
        border: none;
        border-radius: to-rem(4);
        font-size: to-rem(17);
        font-weight: 400;
        color: #1e2124;
        cursor: pointer;

        .icon {
          width: to-rem(20);
          height: to-rem(20);
        }

        &:hover {
          background: #f9fafb;
        }
      }

      .divider {
        width: 0;
        height: to-rem(16);
        border-left: 1px solid #cdd1d5;
      }
    }

    &-close {
      padding: to-rem(8);
      background: none;
      border: none;
      cursor: pointer;
      color: #33363d;

      .icon {
        width: to-rem(24);
        height: to-rem(24);
      }
    }

    // 로그인 영역
    &-login {
      @include flex(row, flex-start, center);
      gap: to-rem(8);
      color: #1e2124;
      font-size: to-rem(22);
      font-weight: 700;

      .icon {
        width: to-rem(24);
        height: to-rem(24);
      }
    }

    // 헤더 메뉴 그룹
    &-header-group {
      @include flex(row, stretch, stretch);
      gap: to-rem(8);
      padding: to-rem(8) to-rem(16) to-rem(16);

      .header-menu-btn {
        @include flex(column, center, center);
        gap: to-rem(2);
        padding: 0 to-rem(8);
        flex: 1;
        height: to-rem(72);
        background: transparent;
        border: none;
        border-radius: to-rem(6);
        cursor: pointer;

        .icon {
          width: to-rem(20);
          height: to-rem(20);
        }

        span {
          font-size: to-rem(17);
          font-weight: 700;
          color: #1e2124;
          text-align: center;
        }

        &:hover {
          background: #f9fafb;
        }
      }
    }

    // 검색 영역
    &-search {
      @include flex(column, flex-start, stretch);
      gap: to-rem(10);
      padding: 0 to-rem(16) to-rem(24);

      .search-box {
        @include flex(row, space-between, center);
        gap: to-rem(8);
        padding: 0 to-rem(16);
        height: to-rem(48);
        border: 1px solid #58616a;
        border-radius: to-rem(6);
        background: #ffffff;

        .search-input {
          flex: 1;
          border: none;
          background: none;
          font-size: to-rem(17);
          color: #1e2124;
          margin-top: 0;

          &::placeholder {
            color: #8a949e;
          }

          &:focus {
            outline: none;
          }
        }

        .icon {
          width: to-rem(20);
          height: to-rem(20);
          color: #33363d;
        }
      }
    }

    // 메뉴 콘텐츠 영역
    &-content {
      @include flex(row, flex-start, stretch);
      flex: 1;
      overflow: hidden;
    }

    // 1depth 바 (좌측)
    &-depth-bar {
      @include flex(column, flex-start, stretch);
      width: to-rem(140);
      background: #eef2f7;
      overflow-y: auto;

      .depth-bar-item {
        @include flex(row, flex-start, center);
        gap: to-rem(8);
        padding: to-rem(16) to-rem(16);
      width: 100%;
        background: transparent;
      border: none;
        font-size: to-rem(17);
        font-weight: 700;
        color: #1e2124;
        text-align: left;
      cursor: pointer;

      &:hover {
          background: #e1e7ed;
        }

        &.selected {
          color: #244874;
        }
      }
    }

    // 2-3depth 메뉴 영역 (우측)
    &-detail {
      @include flex(column, flex-start, stretch);
      flex: 1;
      overflow-y: auto;
      scroll-behavior: smooth;

      .menu-detail-content {
        display: none;
        @include flex(column, flex-start, stretch);
        padding: to-rem(16) to-rem(16) 0;

        &.active {
          display: flex;
        }

        .menu-section {
          @include flex(column, flex-start, stretch);

          &-title {
            @include flex(row, flex-start, center);
            gap: to-rem(8);
            padding: to-rem(4) to-rem(8) to-rem(12);
            border-bottom: 1px solid #8a949e;

            h3 {
              margin: 0;
              font-size: to-rem(19);
              font-weight: 700;
              color: #1e2124;
            }
          }

          &-items {
            @include flex(column, flex-start, stretch);
            padding: to-rem(8) 0;

            .menu-item-group {
              @include flex(column, flex-start, stretch);

              .menu-item-toggle {
                @include flex(row, space-between, center);
                gap: to-rem(4);
                padding: to-rem(12) to-rem(8);
                width: 100%;
                background: transparent;
                border: none;
                border-radius: to-rem(8);
                font-size: to-rem(17);
                font-weight: 400;
                color: #1e2124;
                text-align: left;
                cursor: pointer;

                &:hover {
                  background: #f9fafb;
                }

                &.selected {
                  background: #ecf2f9;
                  font-weight: 700;
                  color: #244874;

                  .icon {
                    transform: rotate(180deg);
                  }
                }

                .icon {
                  width: to-rem(20);
                  height: to-rem(20);
                  transition: transform 0.2s ease;
                }
              }

              .menu-item-link {
                @include flex(row, flex-start, center);
                gap: to-rem(4);
                padding: to-rem(12) to-rem(8);
                width: 100%;
                background: transparent;
                border-radius: to-rem(8);
                font-size: to-rem(17);
                font-weight: 400;
                color: #1e2124;
                text-align: left;
                text-decoration: none;
                cursor: pointer;

                &:hover {
                  background: #f9fafb;
                }
              }

              .menu-submenu {
                display: none;
      &.active {
                  display: block;
                }

                .menu-submenu-link {
                  @include flex(row, flex-start, center);
                  gap: to-rem(8);
                  padding: to-rem(10) to-rem(16);
                  text-decoration: none;
                  font-size: to-rem(17);
                  font-weight: 400;
                  color: #1e2124;
                  border-radius: to-rem(6);

                  &:hover {
                    background: #f9fafb;
                  }

                  .bullet {
                    width: to-rem(4);
                    height: to-rem(4);
                    background: #33363d;
                    border-radius: to-rem(4);
                    flex-shrink: 0;
                  }
                }
              }
            }
          }
        }
      }
    }

    // 유틸리티 그룹 (하단)
    &-utility-group {
      @include flex(column, center, stretch);
      gap: to-rem(16);
      padding: to-rem(16);

      .utility-menu-link {
        @include flex(row, center, center);
        gap: to-rem(2);
        padding: 0 to-rem(2);
        height: to-rem(24);
        text-decoration: none;
        font-size: to-rem(15);
        font-weight: 400;
        color: #1e2124;
        border-radius: to-rem(4);

        &:hover {
          background: #f9fafb;
        }

        .icon {
          width: to-rem(16);
          height: to-rem(16);
        }
      }
    }
  }

  .mobile-menu-trigger {
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: to-rem(40);
    height: to-rem(40);
    background: none;
    border: none;
    cursor: pointer;
    gap: to-rem(4);

    &-bar {
      width: to-rem(20);
      height: to-rem(2);
      background: #374151;
      transition: all 0.2s ease;
    }

    &.active {
      .mobile-menu-trigger-bar:nth-child(1) {
        transform: rotate(45deg) translate(to-rem(4), to-rem(4));
      }

      .mobile-menu-trigger-bar:nth-child(2) {
        opacity: 0;
      }

      .mobile-menu-trigger-bar:nth-child(3) {
        transform: rotate(-45deg) translate(to-rem(4), to-rem(-4));
      }
    }
  }

  @include mobile {
    .mobile-menu-trigger {
      display: flex;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuTrigger = document.getElementById('mobileMenuTrigger');
    const mobileMenu = document.getElementById('mobileMenu');
    const mobileMenuOverlay = document.getElementById('mobileMenuOverlay');
    const mobileMenuClose = document.getElementById('mobileMenuClose');

    // 1depth 바 탭 버튼들
    const depthBarItems = document.querySelectorAll('.depth-bar-item');
    // 메뉴 콘텐츠들
    const menuContents = document.querySelectorAll('.menu-detail-content');
    // 2depth 메뉴 토글 버튼들
    const menuToggleButtons = document.querySelectorAll('.menu-item-toggle');

        // 메뉴 열기
    if (mobileMenuTrigger && mobileMenu && mobileMenuOverlay) {
      mobileMenuTrigger.addEventListener('click', () => {
        mobileMenu.classList.add('active');
        mobileMenuOverlay.classList.add('active');
        mobileMenuTrigger.classList.add('active');
        document.body.style.overflow = 'hidden';
      });
    }

    // 메뉴 닫기
    function closeMenu() {
      if (mobileMenu) {
        mobileMenu.classList.remove('active');
      }
      if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.remove('active');
      }
      if (mobileMenuTrigger) {
        mobileMenuTrigger.classList.remove('active');
      }
      document.body.style.overflow = '';
    }

    if (mobileMenuClose) {
    mobileMenuClose.addEventListener('click', closeMenu);
    }

    if (mobileMenuOverlay) {
    mobileMenuOverlay.addEventListener('click', closeMenu);
    }

    // 1depth 바 탭 전환
    depthBarItems.forEach((item) => {
      item.addEventListener('click', () => {
        // 모든 탭에서 selected 클래스 제거
        depthBarItems.forEach(tab => tab.classList.remove('selected'));
        // 클릭된 탭에 selected 클래스 추가
        item.classList.add('selected');

        // 모든 메뉴 콘텐츠 숨기기
        menuContents.forEach(content => content.classList.remove('active'));

        // 해당하는 메뉴 콘텐츠 보이기
        const category = item.getAttribute('data-category');
        const targetContent = document.querySelector(`[data-content="${category}"]`);
        if (targetContent) {
          targetContent.classList.add('active');

          // 해당 메뉴 콘텐츠 위치로 스크롤
          const menuDetailArea = document.querySelector('.mobile-menu-detail');
          if (menuDetailArea) {
            // 잠시 후 스크롤 (DOM 업데이트 후)
            setTimeout(() => {
              const targetContentRect = targetContent.getBoundingClientRect();
              const containerRect = menuDetailArea.getBoundingClientRect();

              // 컨테이너 기준 상대적 위치 계산
              const relativeTop = targetContentRect.top - containerRect.top;
              const targetScrollPosition = Math.max(0, menuDetailArea.scrollTop + relativeTop);

              menuDetailArea.scrollTo({
                top: targetScrollPosition,
                behavior: 'smooth'
              });
            }, 50);
          }
        }
      });
    });

        // 2depth 메뉴 아코디언 토글 함수
    function handleMenuToggle(button: HTMLElement) {
        const toggleId = button.getAttribute('data-toggle');
        const targetSubmenu = document.querySelector(`[data-submenu="${toggleId}"]`);

        if (targetSubmenu) {
          const isExpanded = button.classList.contains('expanded');

          if (isExpanded) {
            // 접기
            button.classList.remove('expanded');
            button.classList.remove('selected');
            targetSubmenu.classList.remove('active');
          } else {
            // 같은 섹션의 다른 메뉴들 닫기
            const parentSection = button.closest('.menu-section');
            if (parentSection) {
              const otherButtons = parentSection.querySelectorAll('.menu-item-toggle');
              const otherSubmenus = parentSection.querySelectorAll('.menu-submenu');

              otherButtons.forEach((otherBtn: Element) => {
                otherBtn.classList.remove('expanded', 'selected');
              });
              otherSubmenus.forEach((otherSubmenu: Element) => {
                otherSubmenu.classList.remove('active');
              });
            }

            // 펼치기
            button.classList.add('expanded');
            button.classList.add('selected');
            targetSubmenu.classList.add('active');

                        // 3depth 서브메뉴 위치로 스크롤 이동
            setTimeout(() => {
              const menuDetailArea = document.querySelector('.mobile-menu-detail');
              if (menuDetailArea && targetSubmenu) {

                // 방법 1: getBoundingClientRect를 사용한 정확한 위치 계산
                const containerRect = menuDetailArea.getBoundingClientRect();
                const buttonRect = button.getBoundingClientRect();

                // 컨테이너 기준 상대적 위치 + 현재 스크롤 위치
                const relativeTop = buttonRect.top - containerRect.top;
                const targetScrollPosition = Math.max(0, menuDetailArea.scrollTop + relativeTop - 20);

                console.log('스크롤 디버깅:', {
                  buttonTop: buttonRect.top,
                  containerTop: containerRect.top,
                  relativeTop: relativeTop,
                  currentScroll: menuDetailArea.scrollTop,
                  targetScroll: targetScrollPosition
                });

                // 방법 1: scrollTo 시도 (부드러운 스크롤)
                try {
                  menuDetailArea.scrollTo({
                    top: targetScrollPosition,
                    behavior: 'smooth'
                  });
                } catch (e) {
                  console.log('scrollTo 실패, scrollTop 사용');
                }

                // 방법 2: 즉시 스크롤 (폴백)
                setTimeout(() => {
                  if (Math.abs(menuDetailArea.scrollTop - targetScrollPosition) > 10) {
                    console.log('부드러운 스크롤 실패, 강제 스크롤');
                    menuDetailArea.scrollTop = targetScrollPosition;
                  }
                }, 100);

                // 방법 3: Element.scrollIntoView 사용 (추가 폴백)
                setTimeout(() => {
                  try {
                    targetSubmenu.scrollIntoView({
                      behavior: 'smooth',
                      block: 'start',
                      inline: 'nearest'
                    });
                  } catch (e) {
                    console.log('scrollIntoView 실패');
                  }
                }, 50);
              }
            }, 250); // 시간을 더 늘림
          }
        }
    }

        // 2depth 메뉴 아코디언 토글 이벤트 등록
    menuToggleButtons.forEach(button => {
      // 클릭 이벤트
      button.addEventListener('click', (e) => {
        e.preventDefault();
        handleMenuToggle(button as HTMLElement);
      });

      // 터치 이벤트 (모바일 대응)
      button.addEventListener('touchend', (e) => {
        e.preventDefault();
        handleMenuToggle(button as HTMLElement);
      });
    });

    // ESC 키로 메뉴 닫기
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && mobileMenu && mobileMenu.classList.contains('active')) {
        closeMenu();
      }
    });

    // 터치 스와이프로 메뉴 닫기 (선택사항)
    let startX = 0;
    let currentX = 0;
    let isDragging = false;

    if (mobileMenu) {
      mobileMenu.addEventListener('touchstart', (e) => {
        startX = e.touches[0]?.clientX || 0;
        isDragging = true;
      });

      mobileMenu.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        currentX = e.touches[0]?.clientX || 0;
        const diffX = currentX - startX;

        // 오른쪽으로 스와이프 시 메뉴를 따라 이동
        if (diffX > 0) {
          mobileMenu.style.transform = `translateX(${diffX}px)`;
        }
      });

      mobileMenu.addEventListener('touchend', () => {
        if (!isDragging) return;
        isDragging = false;

        const diffX = currentX - startX;

        // 50px 이상 스와이프하면 메뉴 닫기
        if (diffX > 50) {
          closeMenu();
        }

        // 원래 위치로 복원
        mobileMenu.style.transform = '';
      });
    }
  });
</script>