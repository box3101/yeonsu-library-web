---
// 연수구립도서관 가이드 페이지
const currentDate = new Date().toLocaleDateString('ko-KR');

// 통계 정보
const stats = [
  { number: '27', label: '운영중인 페이지' },
  { number: '25', label: 'UI 컴포넌트' },
  { number: '동적메뉴', label: '1depth 기반' },
  { number: 'Vanilla JS', label: '순수 자바스크립트' },
];

// 메인 페이지
const mainPages = [
  {
    id: '01',
    name: '메인 홈페이지',
    url: '/',
    file: 'index.astro',
    status: '완료',
    description: '도서관 메인 페이지, 배너 슬라이더, 퀵링크, 이벤트 섹션',
  },
];

// 페이지 시스템
const searchPages = [
  {
    id: 'S01',
    name: '소장도서검색',
    url: '/01_소장도서검색',
    file: '01_소장도서검색.astro',
    status: '완료',
    description: '도서관 필터, 상세검색, 자료유형 탭, 소장정보 모달',
  },
  {
    id: 'S01-1',
    name: '소장도서검색_상세',
    url: '/01-1.소장도서검색_상세',
    file: '01-1.소장도서검색_상세.astro',
    status: '완료',
    description: '도서 상세 정보 페이지, 소장정보 모달',
  },
  {
    id: 'S01-2',
    name: '소장도서검색_고급검색',
    url: '/01-2.소장도서검색_고급검색',
    file: '01-2.소장도서검색_고급검색.astro',
    status: '완료',
    description: '고급 검색 옵션, 상세 필터링 기능',
  },
  {
    id: 'S02',
    name: '스마트도서관비치도서',
    url: '/02_스마트도서관비치도서',
    file: '02_스마트도서관비치도서.astro',
    status: '완료',
    description: '스마트도서관 전용 검색 페이지',
  },
  {
    id: 'S03',
    name: '도서관에 바란다',
    url: '/03_도서관에바란다',
    file: '03_도서관에바란다.astro',
    status: '완료',
    description: '건의사항 게시판, 테이블 기반 목록',
  },
  {
    id: 'S04',
    name: '공지사항',
    url: '/04_공지사항',
    file: '04_공지사항.astro',
    status: '완료',
    description: '공지사항 게시판, 테이블 기반 목록',
  },
  {
    id: 'S05',
    name: '통합검색',
    url: '/05_통합검색',
    file: '05_통합검색.astro',
    status: '완료',
    description: '통합검색 결과 페이지, 다양한 검색 결과 표시',
  },
  {
    id: 'S05-1',
    name: '통합검색_Empty',
    url: '/05-1_통합검색_Empty',
    file: '05-1_통합검색_Empty.astro',
    status: '완료',
    description: '통합검색 빈 상태 페이지, UiEmpty 컴포넌트 활용',
  },
  {
    id: 'S06',
    name: '인기도서',
    url: '/06_인기도서',
    file: '06_인기도서.astro',
    status: '완료',
    description: '인기도서 목록, UiBookListCard 그리드',
  },
  {
    id: 'S07',
    name: '신착도서',
    url: '/07_신착도서',
    file: '07_신착도서.astro',
    status: '완료',
    description: '신착도서 목록, 최신 입고 도서 정보',
  },
  {
    id: 'S08',
    name: '추천도서',
    url: '/08_추천도서',
    file: '08_추천도서.astro',
    status: '완료',
    description: '추천도서 목록, 사서 추천 및 테마별 도서',
  },
  {
    id: 'S09',
    name: '카테고리분류',
    url: '/09_카테고리분류',
    file: '09_카테고리분류.astro',
    status: '완료',
    description: '주제별 카테고리 도서 분류',
  },
  {
    id: 'S10',
    name: '한국십진분류',
    url: '/10_한국십진분류',
    file: '10_한국십진분류.astro',
    status: '완료',
    description: '한국십진분류법 기반 도서 검색',
  },
];

// 나의 서재 페이지들
const myLibraryPages = [
  {
    id: 'M01',
    name: '대출현황',
    url: '/11.대출현황',
    file: '11.대출현황.astro',
    status: '완료',
    description: '현재 대출중인 도서 목록 및 반납 예정일',
  },
  {
    id: 'M02',
    name: '대출이력',
    url: '/12.대출이력',
    file: '12.대출이력.astro',
    status: '완료',
    description: '과거 대출 이력 조회',
  },
  {
    id: 'M03',
    name: '일반예약현황',
    url: '/13.일반예약현황',
    file: '13.일반예약현황.astro',
    status: '완료',
    description: '예약중인 도서 현황',
  },
  {
    id: 'M04',
    name: '상호대차현황',
    url: '/14.상호대차현황',
    file: '14.상호대차현황.astro',
    status: '완료',
    description: '타 도서관 상호대차 신청 현황',
  },
  {
    id: 'M05',
    name: '희망도서신청현황',
    url: '/15.희망도서신청현황',
    file: '15.희망도서신청현황.astro',
    status: '완료',
    description: '희망도서 신청 및 처리 현황',
  },
  {
    id: 'M06',
    name: '희망전자책신청현황',
    url: '/16.희망전자책신청현황',
    file: '16.희망전자책신청현황.astro',
    status: '완료',
    description: '희망전자책 신청 및 처리 현황',
  },
  {
    id: 'M07',
    name: '내책장',
    url: '/17.내책장',
    file: '17.내책장.astro',
    status: '완료',
    description: '개인 북마크 관리, 태그 클라우드 및 통계 차트 포함',
  },
];

// 행사/프로그램 페이지들
const eventPages = [
  {
    id: 'E01',
    name: '행사신청조회',
    url: '/18.행사신청조회',
    file: '18.행사신청조회.astro',
    status: '완료',
    description: '도서관 행사 신청 및 조회',
  },
  {
    id: 'E02',
    name: '프로그램신청조회',
    url: '/19.프로그램신청조회',
    file: '19.프로그램신청조회.astro',
    status: '완료',
    description: '교육 프로그램 신청 및 조회',
  },
  {
    id: 'E03',
    name: '견학신청조회',
    url: '/견학신청조회',
    file: '견학신청조회.astro',
    status: '완료',
    description: '도서관 견학 프로그램 신청',
  },
  {
    id: 'E04',
    name: '대관신청조회',
    url: '/대관신청조회',
    file: '대관신청조회.astro',
    status: '완료',
    description: '도서관 시설 대관 신청',
  },
  {
    id: 'E05',
    name: '영유아전집신청조회',
    url: '/영유아전집신청조회',
    file: '영유아전집신청조회.astro',
    status: '완료',
    description: '영유아 대상 전집 대출 신청',
  },
];

// UI 컴포넌트 라이브러리
const uiComponents = [
  {
    id: 'U01',
    name: 'UiButton',
    file: 'UiButton.astro',
    feature: '다양한 버튼 스타일 (primary, secondary, outline)',
    status: '완료',
  },
  {
    id: 'U02',
    name: 'UiInput',
    file: 'UiInput.astro',
    feature: '텍스트 입력 필드, 검색 필드',
    status: '완료',
  },
  {
    id: 'U03',
    name: 'UiSelect',
    file: 'UiSelect.astro',
    feature: '드롭다운 선택 박스',
    status: '완료',
  },
  {
    id: 'U04',
    name: 'UiTab',
    file: 'UiTab.astro',
    feature: '탭 네비게이션 (기본, 연결형)',
    status: '완료',
  },
  {
    id: 'U05',
    name: 'UiRadio',
    file: 'UiRadio.astro',
    feature: '라디오 버튼 그룹',
    status: '완료',
  },
  {
    id: 'U06',
    name: 'UiCheckbox',
    file: 'UiCheckbox.astro',
    feature: '체크박스',
    status: '완료',
  },
  {
    id: 'U07',
    name: 'UiSwitch',
    file: 'UiSwitch.astro',
    feature: '토글 스위치',
    status: '완료',
  },
  {
    id: 'U08',
    name: 'UiLibraryFilter',
    file: 'UiLibraryFilter.astro',
    feature: '도서관 필터 (확장/축소 기능)',
    status: '완료',
  },
  {
    id: 'U09',
    name: 'UiBookCard',
    file: 'UiBookCard.astro',
    feature: '도서 정보 카드',
    status: '완료',
  },
  {
    id: 'U10',
    name: 'UiPagination',
    file: 'UiPagination.astro',
    feature: '페이지네이션',
    status: '완료',
  },
  {
    id: 'U11',
    name: 'UiCollectionModal',
    file: 'UiCollectionModal.astro',
    feature: '소장정보 팝업 모달',
    status: '완료',
  },
  {
    id: 'U12',
    name: 'UiNavButton',
    file: 'UiNavButton.astro',
    feature: '네비게이션 버튼',
    status: '완료',
  },
  {
    id: 'U13',
    name: 'UiRelatedSiteButton',
    file: 'UiRelatedSiteButton.astro',
    feature: '관련사이트 버튼',
    status: '완료',
  },
  {
    id: 'U14',
    name: 'UiSearchbar',
    file: 'UiSearchbar.astro',
    feature: '3개 셀렉트박스 검색바 (검색타입, 도서관, 제목)',
    status: '완료',
  },
  {
    id: 'U15',
    name: 'UiSmartLibraryBookCard',
    file: 'UiSmartLibraryBookCard.astro',
    feature: '스마트도서관 전용 도서 카드',
    status: '완료',
  },
  {
    id: 'U16',
    name: 'UiTable',
    file: 'UiTable.astro',
    feature: '게시판용 테이블 (체크박스, 정렬, 상태배지)',
    status: '완료',
  },
  {
    id: 'U17',
    name: 'UiDatePicker',
    file: 'UiDatePicker.astro',
    feature: '날짜 범위 선택 (시작일 ~ 종료일)',
    status: '완료',
  },
  {
    id: 'U18',
    name: 'UiEmpty',
    file: 'UiEmpty.astro',
    feature: '빈 상태 컴포넌트 (검색 결과 없음, 검색어 하이라이트)',
    status: '완료',
  },
  {
    id: 'U19',
    name: 'UiSearchFilter',
    file: 'UiSearchFilter.astro',
    feature: '검색 필터 섹션 (셀렉트 박스들)',
    status: '완료',
  },
  {
    id: 'U20',
    name: 'UiImageTitleResult',
    file: 'UiImageTitleResult.astro',
    feature: '이미지+제목 검색 결과 (검색어 하이라이트)',
    status: '완료',
  },
  {
    id: 'U21',
    name: 'UiTitleOnlyResult',
    file: 'UiTitleOnlyResult.astro',
    feature: '제목만 검색 결과 (검색어 하이라이트)',
    status: '완료',
  },
  {
    id: 'U22',
    name: 'UiSubTab',
    file: 'UiSubTab.astro',
    feature: '서브 탭 컴포넌트 (슬롯 기반, 탭 전환 기능)',
    status: '완료',
  },
  {
    id: 'U23',
    name: 'UiBookListCard',
    file: 'UiBookListCard.astro',
    feature: '도서 목록 카드 (랭킹, 이미지, 좋아요 기능)',
    status: '완료',
  },
  {
    id: 'U24',
    name: 'Grid System',
    file: '_grid-system.scss',
    feature: 'PC to Mobile 반응형 그리드 (1-12열)',
    status: '완료',
  },
];

// 레이아웃 컴포넌트
const layoutComponents = [
  {
    id: 'L01',
    name: 'Header',
    file: 'Header.astro',
    purpose: '사이트 헤더, 로고, 주 메뉴',
    status: '완료',
  },
  {
    id: 'L02',
    name: 'Footer',
    file: 'Footer.astro',
    purpose: '사이트 푸터, 링크, 저작권',
    status: '완료',
  },
  {
    id: 'L03',
    name: 'Gnb',
    file: 'Gnb.astro',
    purpose: '글로벌 네비게이션',
    status: '완료',
  },
  {
    id: 'L04',
    name: 'LeftMenu',
    file: 'LeftMenu.astro',
    purpose: '1depth 기반 동적 좌측 메뉴 (2/3depth 지원)',
    status: '완료',
  },
  {
    id: 'L05',
    name: 'SubLayout',
    file: 'SubLayout.astro',
    purpose: '서브페이지 레이아웃',
    status: '완료',
  },
  {
    id: 'L06',
    name: 'Breadcrumb',
    file: 'Breadcrumb.astro',
    purpose: '브레드크럼 네비게이션',
    status: '완료',
  },
];

// 최신 개선사항
const improvements = [
  {
    id: 'R01',
    title: '동적 메뉴 시스템',
    description: '1depth에 따라 자동 변경되는 좌측 메뉴, URL 기반 감지',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R02',
    title: '다중 셀렉트 검색바',
    description: '검색타입, 도서관, 제목 3개 필터 동시 지원',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R03',
    title: '테이블 컴포넌트',
    description: '게시판 전용, 제목 링크, 상태 배지, 반응형 지원',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R04',
    title: '한글 URL 인코딩',
    description: '한글 페이지명 URL 자동 매칭 처리',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R05',
    title: '검색 결과 컴포넌트',
    description: 'UiEmpty, UiImageTitleResult, UiTitleOnlyResult 컴포넌트 개발',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R06',
    title: '서브 탭 시스템',
    description: 'UiSubTab 컴포넌트 슬롯 기반으로 개발, 탭 전환 기능',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R07',
    title: '도서 카드 컴포넌트',
    description: 'UiBookListCard 컴포넌트 랭킹, 좋아요 기능 포함',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R08',
    title: '반응형 그리드 시스템',
    description: 'PC to Mobile 자동 변환 그리드 (1-12열, 갭 조정)',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R09',
    title: '인기도서 페이지',
    description: '인기도서 목록 페이지, UiBookListCard 활용',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R10',
    title: '통합검색 페이지',
    description: '통합검색 결과 및 빈 상태 페이지, UiEmpty 컴포넌트 구현',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R11',
    title: '내책장 페이지',
    description: 'Figma 디자인 기반 내책장 UI, 태그 클라우드 및 통계 차트 구현',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R12',
    title: '태그 클라우드 시스템',
    description: 'WordCloud2.js, Chart.js, jQuery 통합 라이브러리 구현',
    date: '2025.08',
    status: '적용완료',
  },
  {
    id: 'R13',
    title: '나의 서재 전체 시스템',
    description: '대출현황, 예약현황, 희망도서 등 개인 서비스 페이지 완성',
    date: '2025.08',
    status: '적용완료',
  },
];

// 기술 스택
const techStack = [
  {
    id: 'T01',
    tech: 'Astro',
    version: '4.15.0',
    purpose: '정적 사이트 생성 프레임워크',
    status: '완료',
  },
  {
    id: 'T02',
    tech: 'SCSS',
    version: 'Latest',
    purpose: 'CSS 전처리기 (7-1 아키텍처)',
    status: '완료',
  },
  {
    id: 'T03',
    tech: 'Vanilla JavaScript',
    version: 'ES6+',
    purpose: '순수 자바스크립트 (타입스크립트 사용 금지)',
    status: '완료',
  },
  {
    id: 'T04',
    tech: 'Swiper.js',
    version: '11.2.10',
    purpose: '슬라이더 컴포넌트',
    status: '완료',
  },
  {
    id: 'T05',
    tech: 'jQuery',
    version: '3.7.1',
    purpose: '태그 클라우드 및 차트 라이브러리 지원',
    status: '완료',
  },
  {
    id: 'T06',
    tech: 'Chart.js',
    version: 'Latest',
    purpose: '통계 차트 (막대, 선형)',
    status: '완료',
  },
  {
    id: 'T07',
    tech: 'WordCloud2.js',
    version: 'Latest',
    purpose: '태그 클라우드 시각화',
    status: '완료',
  },
  {
    id: 'T08',
    tech: 'Netlify',
    version: '-',
    purpose: '배포 플랫폼',
    status: '완료',
  },
];

// 데이터 구조 & 설정
const dataStructure = [
  {
    file: 'menuData.ts',
    purpose: '메뉴 설정',
    structure: 'MenuConfig 타입, URL 자동감지',
    note: '1depth별 좌측메뉴 정의',
  },
  {
    file: 'CLAUDE.md',
    purpose: '개발 가이드',
    structure: '명령어, 아키텍처, 규칙',
    note: 'AI 개발 지침서',
  },
  {
    file: 'components/index.ts',
    purpose: '컴포넌트 관리',
    structure: '중앙집중식 export',
    note: '24개 UI 컴포넌트',
  },
  {
    file: 'astro.config.mjs',
    purpose: '프레임워크 설정',
    structure: 'Path aliases, 빌드옵션',
    note: '@/ 경로 설정',
  },
];

// SCSS 아키텍처
const scssArchitecture = [
  {
    folder: 'abstracts/',
    purpose: '함수, 믹스인',
    files: '_functions.scss, _mixins.scss',
    example: 'to-rem(16), @include flex-center, @include mobile',
  },
  {
    folder: 'variables/',
    purpose: '디자인 토큰',
    files: '_colors.scss, _typography.scss',
    example: '$primary-color, $font-bold, $gray-900',
  },
  {
    folder: 'components/',
    purpose: '컴포넌트 스타일',
    files: '_left-menu.scss, _buttons.scss, _ui-subtab.scss, _ui-book-list-card.scss, _my-bookshelf.scss',
    example: '.menu-section-title.active, .book-list-card, .subtab-container, .my-bookshelf, .bookshelf-card',
  },
  {
    folder: 'utilities/',
    purpose: '유틸리티',
    files: '_flex.scss, _spacing.scss, _grid-system.scss',
    example: '.mt24, .flex-center, .grid .grid-5 클래스',
  },
];

// 배포 정보
const deployInfo = [
  {
    item: '배포 플랫폼',
    info: 'Netlify',
    status: '완료',
    note: '자동 배포 설정 완료',
  },
  {
    item: '빌드 명령어',
    info: 'npm run build',
    status: '완료',
    note: 'netlify.toml 설정 완료',
  },
  {
    item: '출력 디렉토리',
    info: 'dist',
    status: '완료',
    note: '정적 파일 생성',
  },
  { item: 'Node.js 버전', info: '18', status: '완료', note: '환경 변수 설정' },
];
---

<!doctype html>
<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>연수구립도서관 - 작업 가이드</title>
    <meta name="description" content="연수구립도서관 웹사이트 개발 작업 가이드 및 페이지 인덱스" />
    <meta name="author" content="Development Team" />
    <link rel="stylesheet" type="text/css" href="https://cdn.rawgit.com/innks/NanumSquareRound/master/nanumsquareround.min.css" />

    <style>
      body {
        background: #1e1f26;
        color: #aaa;
        font:
          14px/2 NanumSquareRound,
          'Apple SD Gothic Neo',
          '맑은 고딕',
          'Malgun Gothic',
          Helvetica,
          Arial,
          sans-serif;
        margin: 0;
        padding: 0;
      }

      .indexWrap {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
      }

      .header {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 30px;
      }

      .avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: 2px solid #252525;
        box-shadow: 0 0 3px 0 #666;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 18px;
      }

      h1 {
        font-weight: 100;
        font-size: 28px;
        margin: 0;
      }

      h1 strong {
        display: inline-block;
        position: relative;
        color: #4a9eff;
      }

      h1 strong:after {
        content: ' ';
        position: absolute;
        top: -10px;
        left: 0;
        width: 100%;
        height: 2px;
        background: linear-gradient(90deg, #4a9eff, #00d4ff);
      }

      h1 small {
        display: block;
        font-size: 14px;
        color: #888;
        margin-top: 5px;
      }

      h1 b {
        display: block;
        font-size: 12px;
        color: #666;
        margin-top: 3px;
      }

      .section-title {
        font-size: 20px;
        color: #4a9eff;
        margin: 40px 0 20px 0;
        padding-bottom: 10px;
        border-bottom: 1px solid #42444e;
      }

      table {
        width: 100%;
        margin: 20px 0;
        border-collapse: collapse;
        background: rgba(255, 255, 255, 0.02);
        border-radius: 8px;
        overflow: hidden;
      }

      table thead th {
        background: #2a2d37;
        border-bottom: 2px solid #42444e;
        text-align: left;
        font-size: 13px;
        color: #ccc;
        padding: 12px 8px;
        font-weight: 600;
      }

      table tbody td {
        border-bottom: 1px solid #42444e;
        padding: 10px 8px;
        font-size: 12px;
        vertical-align: middle;
      }

      table tbody td:first-child {
        color: #4a9eff;
        font-weight: 600;
        text-align: center;
        width: 60px;
      }

      a {
        color: #4a9eff;
        font-weight: 600;
        text-decoration: none;
        transition: color 0.2s ease;
      }

      a:hover {
        color: #00d4ff;
        text-decoration: underline;
      }

      .status-complete {
        color: #28a745;
        font-weight: 600;
      }

      .status-progress {
        color: #ffc107;
        font-weight: 600;
      }

      .status-pending {
        color: #6c757d;
        font-weight: 600;
      }

      .note {
        font-size: 11px;
        color: #666;
        font-style: italic;
      }

      .stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
        margin: 20px 0;
      }

      .stat-card {
        background: rgba(74, 158, 255, 0.1);
        border: 1px solid #42444e;
        border-radius: 8px;
        padding: 15px;
        text-align: center;
      }

      .stat-number {
        font-size: 24px;
        font-weight: bold;
        color: #4a9eff;
      }

      .stat-label {
        font-size: 12px;
        color: #888;
        margin-top: 5px;
      }

      .footer {
        margin-top: 50px;
        padding-top: 20px;
        border-top: 1px solid #42444e;
        text-align: center;
        color: #666;
        font-size: 12px;
      }

      @media (max-width: 768px) {
        .indexWrap {
          padding: 15px;
        }

        .header {
          flex-direction: column;
          text-align: center;
        }

        table {
          font-size: 11px;
        }

        .stats {
          grid-template-columns: 1fr;
        }
      }

      /* 최근 작업 내역 스타일 */
      .recent-work {
        margin: 40px 0;
      }

      .recent-work h2 {
        font-size: 20px;
        color: #4a9eff;
        margin: 0 0 20px 0;
        padding-bottom: 10px;
        border-bottom: 1px solid #42444e;
      }

      .work-list {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }

      .work-item {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid #42444e;
        border-radius: 8px;
        padding: 16px;
        transition: all 0.2s ease;
      }

      .work-item:hover {
        background: rgba(255, 255, 255, 0.08);
        border-color: #4a9eff;
      }

      .work-header {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 8px;
      }

      .work-date {
        color: #888;
        font-size: 12px;
        font-weight: 500;
      }

      .work-time {
        color: #666;
        font-size: 11px;
      }

      .work-type {
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 10px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .work-type--style {
        background: rgba(156, 39, 176, 0.2);
        color: #ba68c8;
        border: 1px solid rgba(156, 39, 176, 0.3);
      }

      .work-type--script {
        background: rgba(255, 193, 7, 0.2);
        color: #ffc107;
        border: 1px solid rgba(255, 193, 7, 0.3);
      }

      .work-type--config {
        background: rgba(76, 175, 80, 0.2);
        color: #81c784;
        border: 1px solid rgba(76, 175, 80, 0.3);
      }

      .work-description {
        color: #ccc;
        font-size: 14px;
        margin-bottom: 6px;
        line-height: 1.4;
      }

      .work-file {
        color: #888;
        font-size: 12px;
        font-family: 'Courier New', monospace;
        opacity: 0.8;
      }
    </style>
  </head>

  <body>
    <div class="indexWrap">
      <div class="header">
        <div class="avatar">연수</div>
        <div>
          <h1>
            <strong>연수구립도서관</strong>
            <small>개발 작업 가이드 & 페이지 인덱스</small>
            <b>ver.{currentDate}</b>
          </h1>
        </div>
      </div>

      <div class="stats">
        {
          stats.map(stat => (
            <div class="stat-card">
              <div class="stat-number">{stat.number}</div>
              <div class="stat-label">{stat.label}</div>
            </div>
          ))
        }
      </div>

      <div class="section-title">📚 메인 페이지</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>페이지명</th>
            <th>URL</th>
            <th>상태</th>
            <th>설명</th>
          </tr>
        </thead>
        <tbody>
          {
            mainPages.map(page => (
              <tr>
                <td>{page.id}</td>
                <td>{page.name}</td>
                <td>
                  <a href={page.url} target="_blank">
                    {page.file}
                  </a>
                </td>
                <td>
                  <span class="status-complete">{page.status}</span>
                </td>
                <td>{page.description}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">📄 도서검색 시스템</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>페이지명</th>
            <th>URL</th>
            <th>상태</th>
            <th>설명</th>
          </tr>
        </thead>
        <tbody>
          {
            searchPages.map(page => (
              <tr>
                <td>{page.id}</td>
                <td>{page.name}</td>
                <td>
                  <a href={page.url} target="_blank">
                    {page.file}
                  </a>
                </td>
                <td>
                  <span class="status-complete">{page.status}</span>
                </td>
                <td>{page.description}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">📚 나의 서재</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>페이지명</th>
            <th>URL</th>
            <th>상태</th>
            <th>설명</th>
          </tr>
        </thead>
        <tbody>
          {
            myLibraryPages.map(page => (
              <tr>
                <td>{page.id}</td>
                <td>{page.name}</td>
                <td>
                  <a href={page.url} target="_blank">
                    {page.file}
                  </a>
                </td>
                <td>
                  <span class="status-complete">{page.status}</span>
                </td>
                <td>{page.description}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">🎭 행사/프로그램</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>페이지명</th>
            <th>URL</th>
            <th>상태</th>
            <th>설명</th>
          </tr>
        </thead>
        <tbody>
          {
            eventPages.map(page => (
              <tr>
                <td>{page.id}</td>
                <td>{page.name}</td>
                <td>
                  <a href={page.url} target="_blank">
                    {page.file}
                  </a>
                </td>
                <td>
                  <span class="status-complete">{page.status}</span>
                </td>
                <td>{page.description}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">🎨 UI 컴포넌트 라이브러리</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>컴포넌트</th>
            <th>파일</th>
            <th>기능</th>
            <th>스타일</th>
          </tr>
        </thead>
        <tbody>
          {
            uiComponents.map(component => (
              <tr>
                <td>{component.id}</td>
                <td>{component.name}</td>
                <td>{component.file}</td>
                <td>{component.feature}</td>
                <td>
                  <span class="status-complete">{component.status}</span>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">🏗️ 레이아웃 컴포넌트</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>컴포넌트</th>
            <th>파일</th>
            <th>용도</th>
            <th>상태</th>
          </tr>
        </thead>
        <tbody>
          {
            layoutComponents.map(component => (
              <tr>
                <td>{component.id}</td>
                <td>{component.name}</td>
                <td>{component.file}</td>
                <td>{component.purpose}</td>
                <td>
                  <span class="status-complete">{component.status}</span>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">🎨 최신 개선사항</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>개선내용</th>
            <th>설명</th>
            <th>적용일</th>
            <th>상태</th>
          </tr>
        </thead>
        <tbody>
          {
            improvements.map(improvement => (
              <tr>
                <td>{improvement.id}</td>
                <td>{improvement.title}</td>
                <td>{improvement.description}</td>
                <td>{improvement.date}</td>
                <td>
                  <span class="status-complete">{improvement.status}</span>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">💻 기술 스택 & 아키텍처</div>
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>기술</th>
            <th>버전</th>
            <th>용도</th>
            <th>상태</th>
          </tr>
        </thead>
        <tbody>
          {
            techStack.map(tech => (
              <tr>
                <td>{tech.id}</td>
                <td>{tech.tech}</td>
                <td>{tech.version}</td>
                <td>{tech.purpose}</td>
                <td>
                  <span class="status-complete">{tech.status}</span>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">📁 데이터 구조 & 설정</div>
      <table>
        <thead>
          <tr>
            <th>파일</th>
            <th>용도</th>
            <th>구조</th>
            <th>비고</th>
          </tr>
        </thead>
        <tbody>
          {
            dataStructure.map(data => (
              <tr>
                <td>{data.file}</td>
                <td>{data.purpose}</td>
                <td>{data.structure}</td>
                <td>{data.note}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">📐 SCSS 아키텍처 (7-1 Pattern)</div>
      <table>
        <thead>
          <tr>
            <th>폴더</th>
            <th>용도</th>
            <th>주요 파일</th>
            <th>실제 사용 예시</th>
          </tr>
        </thead>
        <tbody>
          {
            scssArchitecture.map(scss => (
              <tr>
                <td>{scss.folder}</td>
                <td>{scss.purpose}</td>
                <td>{scss.files}</td>
                <td>{scss.example}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="section-title">🚀 배포 정보</div>
      <table>
        <thead>
          <tr>
            <th>항목</th>
            <th>정보</th>
            <th>상태</th>
            <th>비고</th>
          </tr>
        </thead>
        <tbody>
          {
            deployInfo.map(deploy => (
              <tr>
                <td>{deploy.item}</td>
                <td>{deploy.info}</td>
                <td>
                  <span class="status-complete">{deploy.status}</span>
                </td>
                <td>{deploy.note}</td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="footer">
        <p>
          <strong>연수구립도서관 웹사이트</strong><br />
          Astro + SCSS + TypeScript<br />
          개발일: {currentDate} |
          <a href="https://github.com/box3101/yeonsu-library-web" target="_blank">GitHub Repository</a>
        </p>
      </div>
    </div>
  </body>
</html>
