---
import Layout from '@/layouts/Layout.astro';
import SubLayout from '@/components/layout/SubLayout.astro';
import {
  UiPagination,
  UiSelect,
  UiButton,
  UiTab,
  UiInput,
  UiKeyboard,
  UiSmartLibraryBookCardType2,
  UiTextarea,
  UiCheckbox,
  UiRadio,
} from '@components';

const breadcrumbItems = [
  { text: '홈', link: '/' },
  { text: '내정보', link: '#' },
  { text: '희망도서신청', link: '#' },
];

// 신청자 정보 필드 설정
const applicantFields = [
  {
    name: 'name',
    label: '이름',
    placeholder: '이름을 입력해주세요.',
    required: true,
    disabled: true,
  },
  {
    name: 'phone',
    label: '연락처',
    placeholder: '연락처를 입력해주세요.',
    required: true,
    state: 'error',
    helperText: '연락처를 올바르게 입력해주세요.',
  },
];

// 도서 정보 필드 설정
const bookFields = [
  [
    {
      name: 'bookTitle',
      type: 'input',
      label: '희망전자책명',
      placeholder: '희망전자책명을 입력해주세요.',
      required: true,
    },
    {
      name: 'author',
      type: 'input',
      label: '저자',
      placeholder: '저자를 입력해주세요.',
      required: true,
    },
  ],
  [
    {
      name: 'publisher',
      type: 'input',
      label: '발행처',
      placeholder: '발행처를 입력해주세요.',
      required: true,
    },
    {
      name: 'publishYear',
      type: 'input',
      label: '발행연도',
      placeholder: '발행연도를 입력해주세요.',
      required: true,
    },
  ],
  [
    {
      type: 'textarea',
      label: '신청사유',
      placeholder: '200 자 이내로 입력해주세요.',
      colSpan: 1,
    },
  ],
];
---

<Layout title="희망도서신청">
  <SubLayout title="희망도서신청" breadcrumbItems={breadcrumbItems} menuType="열린참여마당">
    <div class="sub-layout__content">
      <div class="sub-layout__content-inner">
        <div class="sub-layout__content-inner-body sub-layout__content-inner-body--form">
          <!-- 신청자 정보 -->
          <div class="sub-layout__content-inner-body-item">
            <div class="sub-layout__content-inner-body-item-title">
              <h2 class="sub-layout__content-inner-body-item-title-text">신청자 정보</h2>
            </div>

            <!-- 이름, 연락처 -->
            <div class="sub-layout__content-inner-body-item-content flex gap-20">
              {
                applicantFields.slice(0, 2).map(field => (
                  <div class="sub-layout__content-inner-body-item-content-item flex-1">
                    <div class="sub-layout__content-inner-body-item-content-item-label">
                      {field.label}
                      {field.required && <sup class="text-red">*</sup>}
                    </div>
                    <div class="sub-layout__content-inner-body-item-content-item-value">
                      <UiInput
                        name={field.name}
                        placeholder={field.placeholder}
                        class="w-full"
                        disabled={field.disabled}
                        required={field.required}
                        state={field.state}
                        helperText={field.helperText}
                        errorMessage={field.errorMessage}
                      />
                    </div>
                  </div>
                ))
              }
            </div>

            <!-- 이메일 -->
            <div class="sub-layout__content-inner-body-item-content flex gap-20">
              {
                applicantFields.slice(2).map(field => (
                  <div class="sub-layout__content-inner-body-item-content-item flex-1">
                    <div class="sub-layout__content-inner-body-item-content-item-label">
                      {field.label}
                      {field.required && <sup class="text-red">*</sup>}
                    </div>
                    <div class="sub-layout__content-inner-body-item-content-item-value">
                      <UiInput
                        name={field.name}
                        placeholder={field.placeholder}
                        class="w-full"
                        disabled={field.disabled}
                        required={field.required}
                        state={field.state}
                        helperText={field.helperText}
                        errorMessage={field.errorMessage}
                      />
                    </div>
                  </div>
                ))
              }
              <div class="sub-layout__content-inner-body-item-content-item flex-1"></div>
            </div>
          </div>

          <!-- 도서 신청 정보 -->
          <div class="sub-layout__content-inner-body-item">
            <div class="sub-layout__content-inner-body-item-title">
              <h2 class="sub-layout__content-inner-body-item-title-text">도서 신청 정보</h2>
              <div class="sub-layout__content-inner-body-item-title-text-noti">
                <img src="./assets/images/icon/icon-noti2.svg" alt="" />
                <p>해당 도서관에 소장중 또는 정리중인 도서가 있을 경우 또는 당해연도 희망도서 예산 소진 시 해당 도서관은 선택 불가합니다.</p>
              </div>
            </div>

            <!-- 도서 신청 정보 필드들 -->
            {
              bookFields.map(rowFields => (
                <div class="sub-layout__content-inner-body-item-content">
                  {rowFields.map(field => (
                    <div class="sub-layout__content-inner-body-item-content-item">
                      <div class="sub-layout__content-inner-body-item-content-item-label">
                        {field.label}
                        {field.required && <sup class="text-red">*</sup>}
                      </div>
                      <div class="sub-layout__content-inner-body-item-content-item-value">
                        {field.type === 'select' && (
                          <UiSelect
                            name={field.name}
                            class="w-full"
                            required={field.required}
                            state={field.state}
                            helperText={field.helperText}
                            errorMessage={field.errorMessage}
                            options={field.options}
                          />
                        )}
                        {field.type === 'input' && (
                          <UiInput
                            name={field.name}
                            placeholder={field.placeholder}
                            class="w-full"
                            required={field.required}
                            state={field.state}
                            helperText={field.helperText}
                            errorMessage={field.errorMessage}
                          />
                        )}
                        {field.type === 'textarea' && <UiTextarea resize="none" rows={3} maxlength={200} showCounter={true} />}
                      </div>
                    </div>
                  ))}
                </div>
              ))
            }
          </div>
        </div>

        <!-- 취소 신청 -->
        <div class="sub-layout__content-inner-body-footer">
          <UiButton variant="primary" text="신청" class="w-135-mobile-full" />
        </div>
      </div>
    </div></SubLayout
  ></Layout
>
