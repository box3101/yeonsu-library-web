@use '../abstracts' as *;
@use '../variables/colors' as *;

.ui-select {
  position: relative;
  display: inline-block;

  // Width variants
  &--width-auto {
    width: auto;
    min-width: to-rem(120);

    @include mobile {
      min-width: to-rem(100);
    }
  }

  &--width-full {
    width: 100%;
  }

  &--width-fit {
    width: fit-content;
    min-width: to-rem(80);

    @include mobile {
      min-width: to-rem(60);
    }
  }

  &__wrapper {
    position: relative;
    display: inline-block;
    width: 100%;
  }

  &__element {
    width: 100%;
    padding: to-rem(16) to-rem(40) to-rem(16) to-rem(16);
    border: 1px solid $gray-400;
    border-radius: to-rem(6);
    background: $white;
    font-family: 'Pretendard GOV', sans-serif;
    font-size: to-rem(16);
    font-weight: 400;
    color: $gray-700;
    appearance: none;
    cursor: pointer;
    transition: all 0.2s ease;
    min-height: to-rem(48);
    word-break: keep-all;

    @include mobile {
      padding: to-rem(14) to-rem(36) to-rem(14) to-rem(14);
      font-size: to-rem(15);
      min-height: to-rem(44);
      border-radius: to-rem(4);
    }

    &:focus {
      outline: to-rem(2) solid $primary-color;
      outline-offset: to-rem(2);
      border-color: $primary-color;
    }

    &:disabled {
      background: $gray-50;
      color: $gray-400;
      cursor: not-allowed;
      border-color: $gray-200;
    }

    &:hover:not(:disabled) {
      border-color: $gray-600;
    }
  }

  // Size variants
  &--small &__element {
    padding: to-rem(12) to-rem(36) to-rem(12) to-rem(12);
    font-size: to-rem(14);
    min-height: to-rem(40);
    border-radius: to-rem(4);

    @include mobile {
      padding: to-rem(10) to-rem(32) to-rem(10) to-rem(10);
      font-size: to-rem(13);
      min-height: to-rem(36);
    }
  }

  &--large &__element {
    padding: to-rem(20) to-rem(44) to-rem(20) to-rem(20);
    font-size: to-rem(18);
    min-height: to-rem(56);
    border-radius: to-rem(8);

    @include mobile {
      padding: to-rem(16) to-rem(40) to-rem(16) to-rem(16);
      font-size: to-rem(16);
      min-height: to-rem(48);
      border-radius: to-rem(6);
    }
  }

  // Ghost variant
  &--ghost &__element {
    border: none;
    background: transparent;
    color: $gray-900;
    font-weight: 600;
    padding: to-rem(8) to-rem(24) to-rem(8) 0;
    min-height: auto;

    @include mobile {
      padding: to-rem(6) to-rem(20) to-rem(6) 0;
      font-size: to-rem(14);
    }

    &:focus {
      outline: none;
      background: rgba(37, 110, 244, 0.1);
      border-radius: to-rem(4);
    }

    &:hover:not(:disabled) {
      background: $gray-50;
      border-radius: to-rem(4);
    }
  }

  &--ghost &__arrow {
    right: 0;

    @include mobile {
      right: to-rem(-2);
    }
  }

  &--ghost.ui-select--small &__element {
    padding: to-rem(6) to-rem(20) to-rem(6) 0;
    font-size: to-rem(13);

    @include mobile {
      padding: to-rem(4) to-rem(18) to-rem(4) 0;
      font-size: to-rem(12);
    }
  }

  &--ghost.ui-select--large &__element {
    padding: to-rem(10) to-rem(28) to-rem(10) 0;
    font-size: to-rem(17);

    @include mobile {
      padding: to-rem(8) to-rem(24) to-rem(8) 0;
      font-size: to-rem(15);
    }
  }

  &__arrow {
    position: absolute;
    right: to-rem(16);
    top: 50%;
    transform: translateY(-50%);
    width: to-rem(16);
    height: to-rem(16);
    color: $gray-600;
    pointer-events: none;
    transition: transform 0.2s ease;

    @include mobile {
      right: to-rem(14);
      width: to-rem(14);
      height: to-rem(14);
    }

    svg {
      width: 100%;
      height: 100%;
    }
  }

  // Small variant arrow
  &--small &__arrow {
    right: to-rem(12);
    width: to-rem(14);
    height: to-rem(14);

    @include mobile {
      right: to-rem(10);
      width: to-rem(12);
      height: to-rem(12);
    }
  }

  // Large variant arrow
  &--large &__arrow {
    right: to-rem(20);
    width: to-rem(18);
    height: to-rem(18);

    @include mobile {
      right: to-rem(16);
      width: to-rem(16);
      height: to-rem(16);
    }
  }

  // 포커스 시 화살표 회전
  &__element:focus + &__arrow {
    transform: translateY(-50%) rotate(180deg);
  }
}
