@use '../abstracts' as *;
@use '../variables/colors' as *;
@use '../variables/layout' as *;
@use '../variables/typography' as *;

.ui-input-container {
  display: flex;
  flex-direction: column;
  gap: to-rem(8);
  position: relative;
}

.ui-input__label {
  font-size: 0.875rem;
  font-weight: $font-medium;
  color: $gray-700;
  line-height: 1.4;

  .ui-input__required {
    color: $error-color;
    margin-left: to-rem(2);
  }
}

.ui-input__wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.ui-input {
  width: 100%;
  font-family: $font-family-primary;
  font-size: $ui-text-medium;
  font-weight: $ui-font-normal;
  line-height: $line-height-normal;
  border-radius: to-rem(8);
  border: 1px solid $gray-300;
  background-color: $white;
  color: $ui-text-primary;
  transition: all 0.2s ease;
  outline: none;

  @include mobile {
    font-size: $ui-text-medium-mobile;
  }

  &::placeholder {
    color: $ui-text-placeholder;
  }

  &:focus {
    border-color: $blue-500;
    box-shadow: 0 0 0 3px rgba(0, 124, 204, 0.1);
  }

  &:hover:not(:disabled):not(:readonly) {
    border-color: $gray-400;
  }

  // 크기 variants
  &--xsmall {
    padding: to-rem(6) to-rem(10);
    font-size: $ui-text-xsmall;
    height: $component-height-xsmall;

    @include mobile {
      font-size: $ui-text-xsmall-mobile;
      height: $component-height-xsmall-mobile;
    }
  }

  &--small {
    padding: to-rem(8) to-rem(12);
    font-size: $ui-text-small;
    height: $component-height-small;

    @include mobile {
      font-size: $ui-text-small-mobile;
      height: $component-height-small-mobile;
    }
  }

  &--medium {
    padding: to-rem(12) to-rem(16);
    font-size: $ui-text-medium;
    height: $component-height-medium;

    @include mobile {
      font-size: $ui-text-medium-mobile;
      height: $component-height-medium-mobile;
    }
  }

  &--large {
    padding: to-rem(16) to-rem(20);
    font-size: $ui-text-large;
    height: $component-height-large;

    @include mobile {
      font-size: $ui-text-large-mobile;
      height: $component-height-large-mobile;
    }
  }

  &--xlarge {
    padding: to-rem(20) to-rem(24);
    font-size: $ui-text-xlarge;
    height: $component-height-xlarge;

    @include mobile {
      font-size: $ui-text-xlarge-mobile;
      height: $component-height-xlarge-mobile;
    }
  }

  // 스타일 variants
  &--filled {
    border-color: transparent;

    &:focus {
      background-color: $white;
      border-color: $blue-500;
    }
  }

  &--outlined {
    background-color: transparent;
    border-width: 2px;
  }

  &--ghost {
    background-color: transparent;
    border-color: transparent;

    &:focus {
      border-color: $blue-500;
      background-color: $white;
    }
  }

  // 상태 variants
  &--success {
    border-color: $success-color !important;

    &:focus {
      border-color: $success-color !important;
      box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
    }
  }

  &--error {
    border-color: $error-color !important;

    &:focus {
      border-color: $error-color !important;
      box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
    }
  }

  &--warning {
    border-color: $warning-color !important;

    &:focus {
      border-color: $warning-color !important;
      box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
    }
  }

  &--filled {
    border-color: $ui-filled-border;

    &:focus {
      border-color: $primary-color;
      box-shadow: 0 0 0 3px rgba(0, 124, 204, 0.1);
    }

    &:hover:not(:disabled):not(:readonly) {
      border-color: $ui-filled-border;
    }
  }

  // 아이콘이 있을 때 패딩 조정
  &--icon-left {
    &.ui-input--xsmall {
      padding-left: to-rem(32);
    }

    &.ui-input--small {
      padding-left: to-rem(36);
    }

    &.ui-input--medium {
      padding-left: to-rem(44);
    }

    &.ui-input--large {
      padding-left: to-rem(52);
    }

    &.ui-input--xlarge {
      padding-left: to-rem(56);
    }
  }

  &--icon-right {
    &.ui-input--xsmall {
      padding-right: to-rem(32);
    }

    &.ui-input--small {
      padding-right: to-rem(36);
    }

    &.ui-input--medium {
      padding-right: to-rem(44);
    }

    &.ui-input--large {
      padding-right: to-rem(52);
    }

    &.ui-input--xlarge {
      padding-right: to-rem(56);
    }
  }

  // 비활성화 상태
  &--disabled {
    background-color: $gray-100;
    color: $ui-text-disabled;
    cursor: not-allowed;

    &::placeholder {
      color: $ui-text-disabled;
    }
  }

  // 읽기 전용 상태
  &--readonly {
    background-color: $gray-50;
    cursor: default;
  }

  // Clear 버튼이 있을 때 패딩 조정
  &--clearable {
    &.ui-input--xsmall {
      padding-right: to-rem(32);
    }

    &.ui-input--small {
      padding-right: to-rem(36);
    }

    &.ui-input--medium {
      padding-right: to-rem(44);
    }

    &.ui-input--large {
      padding-right: to-rem(52);
    }

    &.ui-input--xlarge {
      padding-right: to-rem(56);
    }
  }
}

.ui-input__icon {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $gray-400;
  pointer-events: none;
  z-index: 1;

  img {
    width: to-rem(16);
    height: to-rem(16);
    opacity: 0.6;
  }

  &--left {
    left: to-rem(12);
  }

  &--right {
    right: to-rem(12);
  }
}

.ui-input__clear {
  position: absolute;
  right: to-rem(14);
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  cursor: pointer;
  padding: to-rem(4);
  border-radius: to-rem(4);
  opacity: 0;
  visibility: hidden;
  transition: all 0.2s ease;
  z-index: 2;
  width: to-rem(20);
  height: to-rem(20);

  &:hover {
    background-color: alpha($gray-500, 0.1);
  }

  &:focus {
    outline: 2px solid $blue-500;
    outline-offset: 2px;
  }

  // Input에 값이 있을 때만 표시
  .ui-input-container:hover &,
  .ui-input:focus ~ &,
  &.is-visible {
    opacity: 1;
    visibility: visible;
  }

  .ui-input--disabled ~ & {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ui-input--readonly ~ & {
    display: none;
  }
}

.ui-input__help {
  font-size: 0.75rem;
  line-height: 1.4;
  color: $gray-500;
  position: absolute;
  left: 0;
  top: 111%;

  &--error {
    color: $error-color;
  }

  &--warning {
    color: $warning-color;
  }

  &--success {
    color: $success-color;
  }
}
