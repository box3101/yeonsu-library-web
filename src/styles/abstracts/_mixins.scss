@use '../variables/layout' as *;
@use '../variables/typography' as *;
@use 'sass:map';

// ============================================
// Mixins
// ============================================

// Flex mixin
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 자주 사용하는 flex 패턴들
@mixin flex-center {
  @include flex(row, center, center);
}

@mixin flex-between {
  @include flex(row, space-between, center);
}

@mixin flex-column {
  @include flex(column, flex-start, stretch);
}

@mixin flex-column-center {
  @include flex(column, center, center);
}

// 반응형 mixins
@mixin mobile {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: #{$breakpoint-sm - 1px}) {
      @content;
    }
  }
  @if $breakpoint == tablet {
    @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-lg - 1px}) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  }
}

// 폰트 사이즈 mixin (rem 사용)
@mixin font-size($size, $line-height: 1.4) {
  font-size: to-rem($size);
  line-height: $line-height;
}

// 절대 위치 mixin
@mixin absolute($top: null, $right: null, $bottom: null, $left: null) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// 상대 위치 mixin
@mixin relative($top: null, $right: null, $bottom: null, $left: null) {
  position: relative;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// 버튼 리셋 mixin
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
  text-decoration: none;

  &:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

// 버튼 mixin
@mixin button($bg-color, $text-color: white, $padding: to-rem(12) to-rem(24)) {
  @include button-reset;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $padding;
  background-color: $bg-color;
  color: $text-color;
  border-radius: to-rem(8);
  transition: all 0.2s ease;

  &:hover {
    background-color: darken($bg-color, 10%);
  }
}

// 텍스트 truncate
@mixin text-truncate {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// 멀티라인 텍스트 truncate
@mixin text-truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
  overflow: hidden;
}

// 그림자 mixin
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow:
      0 1px 3px rgba(0, 0, 0, 0.12),
      0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $level == 2 {
    box-shadow:
      0 3px 6px rgba(0, 0, 0, 0.16),
      0 3px 6px rgba(0, 0, 0, 0.23);
  } @else if $level == 3 {
    box-shadow:
      0 10px 20px rgba(0, 0, 0, 0.19),
      0 6px 6px rgba(0, 0, 0, 0.23);
  }
}

// 배경 이미지 mixin
@mixin bg-image($url, $size: cover, $position: center) {
  background-image: url($url);
  background-size: $size;
  background-position: $position;
  background-repeat: no-repeat;
}

// 페이지 타이틀 mixin
@mixin page-title($level: 'h2', $color: null) {
  // 직접 rem 값 매핑
  @if $level == 'h1' {
    font-size: 2.5rem; // 40px
  } @else if $level == 'h2' {
    font-size: 1.75rem; // 28px
  } @else if $level == 'h3' {
    font-size: 1.5rem; // 24px
  } @else if $level == 'h4' {
    font-size: 1.25rem; // 20px
  } @else if $level == 'h5' {
    font-size: 1.125rem; // 18px
  } @else {
    font-size: 1rem; // 16px
  }

  font-weight: map.get($page-title-weights, $level);
  line-height: map.get($page-title-line-heights, $level);
  margin: 0;

  @if $color {
    color: $color;
  }

  // 반응형 폰트 크기 조정
  @include mobile {
    @if $level == 'h1' {
      font-size: 2.125rem; // 40px * 0.85
    } @else if $level == 'h2' {
      font-size: 1.5rem; // 28px * 0.85
    } @else if $level == 'h3' {
      font-size: 1.275rem; // 24px * 0.85
    } @else if $level == 'h4' {
      font-size: 1.0625rem; // 20px * 0.85
    } @else if $level == 'h5' {
      font-size: 0.95625rem; // 18px * 0.85
    } @else {
      font-size: 0.85rem; // 16px * 0.85
    }
  }

  @include tablet {
    @if $level == 'h1' {
      font-size: 2.25rem; // 40px * 0.9
    } @else if $level == 'h2' {
      font-size: 1.575rem; // 28px * 0.9
    } @else if $level == 'h3' {
      font-size: 1.35rem; // 24px * 0.9
    } @else if $level == 'h4' {
      font-size: 1.125rem; // 20px * 0.9
    } @else if $level == 'h5' {
      font-size: 1.0125rem; // 18px * 0.9
    } @else {
      font-size: 0.9rem; // 16px * 0.9
    }
  }
}
